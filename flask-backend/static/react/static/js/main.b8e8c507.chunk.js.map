{"version":3,"sources":["page/home.jsx","page/not-found.jsx","lib/api-fetch.js","page/about.jsx","lib/util.js","lib/constants.jsx","components/sortable-table.jsx","components/toast.jsx","components/pagination.jsx","components/sort-on.jsx","components/tag-input.jsx","components/filter-on.jsx","containers/table-actions.jsx","hooks/use-data-store.js","containers/cities.jsx","page/cities.jsx","containers/restaurants.jsx","containers/events.jsx","containers/airbnbs.jsx","page/city.jsx","page/restaurants.jsx","page/restaurant.jsx","page/event.jsx","page/events.jsx","components/navigation.jsx","App.jsx","serviceWorker.js","index.js","assets/marshall_portrait.jpg","assets/yulissa_portrait.jpg","assets/quinton_portrait.jpg","assets/nathan_portrait.jpg","assets/xindi_portrait.jpg"],"names":["Home","rand","Math","floor","random","id","className","Container","Row","Col","NotFound","to","base","apiFetch","url","method","useApi","json","fetch","mode","cache","headers","redirect","referrerPolicy","then","response","photos","marshall","marshallPhoto","yulissa","yulissaPhoto","quinton","quintonPhoto","nathan","nathanPhoto","xindi","xindiPhoto","UnitTestResult","results","totalTime","spentMilliseconds","Table","triped","bordered","hover","variant","map","type","description","name","About","useState","people","setPeople","unitTestResult","setUnitTestResult","useEffect","data","about","runTests","useCallback","onClick","href","target","rel","length","responsibilities","stats","commits","issues","key","xs","sm","md","lg","Card","Img","src","alt","Body","Title","Text","Spinner","animation","getCityIdByName","cityName","toLowerCase","replace","getGoogleMapLinkByCoordinates","latitude","longtitude","getHours","time","hour","substring","minute","RESTAURANT_SORTABLE_SCHEMA","best_match","title","dataSort","rating","review_count","distance","EVENT_SORTABLE_SCHEMA","popularity","time_start","AIRBNB_SORTABLE_SCHEMA","price","accomodates","AIRBNB_SCHEMA","image","getBodyFormat","_","img","picture_url","isKey","listing_url","review_score","review_scores_rating","number_of_reviews","zipcode","neighborhood_overview","RESTAURANT_SCHEMA","image_url","alias","Number","toFixed","location","address","display_address","join","categories","category","reviews","RESTAURANTS_PAGE_SCHEMA","city","EVENT_SCHEMA","interested_count","count","is_free","isFree","start","end","time_end","Date","toLocaleDateString","event_site_url","EVENTS_PAGE_SCHEMA","CITY_SCHEMA","state","population","ORDER_SCHEMA","CATEGORIES","SortableTable","settings","options","noDataText","role","version","tableStyle","marginBottom","striped","tableBodyClass","tableHeaderClass","Object","keys","sortFunc","width","dataField","dataFormat","row","ToastNote","message","showA","setShowA","Toast","show","onClose","style","margin","Header","color","Pagination","totalRecords","loadPage","currentPage","totalPages","min","paginationButtons","startsAt","Array","getButtons","goToPage","num","First","disabled","Prev","Ellipsis","Item","active","Next","Last","SortOn","sortOn","updateSortOn","sortableAttributes","schema","reduce","dict","getSortableAttributes","sort","order","DropdownButton","as","ButtonGroup","alignRight","Dropdown","eventKey","find","TagInput","handleChange","tags","setState","this","props","getAllSuggestions","submit","renderInput","addTag","value","ref","onChange","inputValue","trim","inputLength","suggestions","filter","suggestion","slice","shouldRenderSuggestions","item","getSuggestionValue","renderSuggestion","inputProps","e","newValue","preventDefault","onSuggestionSelected","onSuggestionsClearRequested","onSuggestionsFetchRequested","Button","React","Component","FilterOn","filterSchema","filterOn","updateFilterOn","categorySchema","includes","defaultProps","TableActions","sortSchema","aria-label","getUrl","params","query","qs","stringify","indexOf","useDataStore","init","initialParams","option","recordsByPage","setRecordsByPage","recordsCount","setRecordsCount","setCurrentPage","setParams","fetching","setFetching","setError","complete","setComplete","reset","onFetchSuccess","page","total","onFetchFail","err","fetchWithUrl","urlToFetch","fetchPage","newParams","newURL","resp","catch","pageRecords","Cities","isError","setIsError","setSortOn","newSortOn","fluid","CitiesPage","getCategory","filters","categoryAlias","Restaurants","coordinates","initialFilters","tableSchema","setFilterOn","initialSortOn","longitude","initDataStore","newFilterOn","Events","Airbnbs","TABS","City","useParams","setCity","setImage","web","error","console","Tabs","defaultActiveKey","Tab","RestaurantsPage","useContext","CityHuntContext","Restaurant","restaurant","setRestaurant","hours","Badge","pill","open","day","getOpenHours","Event","event","setEvent","cost","EventsPage","AppNavBar","useLocation","Navbar","bg","Nav","pathname","Link","Navigation","path","exact","createContext","App","setCoordinates","callback","navigator","geolocation","getCurrentPosition","coords","Provider","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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B,MAAO,aAET,CACE0B,MAAO,mBACP1B,MAAO,sBAET,CACE0B,MAAO,UACP1B,MAAO,WAET,CACE0B,MAAO,UACP1B,MAAO,WAET,CACE0B,MAAO,YACP1B,MAAO,aAET,CACE0B,MAAO,UACP1B,MAAO,WAET,CACE0B,MAAO,UACP1B,MAAO,WAET,CACE0B,MAAO,QACP1B,MAAO,SAET,CACE0B,MAAO,YACP1B,MAAO,aAET,CACE0B,MAAO,QACP1B,MAAO,gBAET,CACE0B,MAAO,YACP1B,MAAO,aAET,CACE0B,MAAO,YACP1B,MAAO,aAET,CACE0B,MAAO,UACP1B,MAAO,WAET,CACE0B,MAAO,eACP1B,MAAO,gBAET,CACE0B,MAAO,gBACP1B,MAAO,iBAET,CACE0B,MAAO,cACP1B,MAAO,gBAET,CACE0B,MAAO,UACP1B,MAAO,WAET,CACE0B,MAAO,cACP1B,MAAO,gBAET,CACE0B,MAAO,YACP1B,MAAO,aAET,CACE0B,MAAO,QACP1B,MAAO,SAET,CACE0B,MAAO,QACP1B,MAAO,SAET,CACE0B,MAAO,QACP1B,MAAO,SAET,CACE0B,MAAO,SACP1B,MAAO,UAET,CACE0B,MAAO,gBACP1B,MAAO,kBAET,CACE0B,MAAO,WACP1B,MAAO,YAET,CACE0B,MAAO,YACP1B,MAAO,aAET,CACE0B,MAAO,WACP1B,MAAO,YAET,CACE0B,MAAO,aACP1B,MAAO,gBAET,CACE0B,MAAO,SACP1B,MAAO,UAET,CACE0B,MAAO,aACP1B,MAAO,cAET,CACE0B,MAAO,aACP1B,MAAO,eAET,CACE0B,MAAO,SACP1B,MAAO,UAET,CACE0B,MAAO,WACP1B,MAAO,aAET,CACE0B,MAAO,aACP1B,MAAO,cAET,CACE0B,MAAO,WACP1B,MAAO,YAET,CACE0B,MAAO,SACP1B,MAAO,UAET,CACE0B,MAAO,cACP1B,MAAO,eAET,CACE0B,MAAO,QACP1B,MAAO,SAET,CACE0B,MAAO,YACP1B,MAAO,aAET,CACE0B,MAAO,QACP1B,MAAO,SAET,CACE0B,MAAO,WACP1B,MAAO,YAET,CACE0B,MAAO,YACP1B,MAAO,sBAET,CACE0B,MAAO,SACP1B,MAAO,wBAET,CACE0B,MAAO,WACP1B,MAAO,YAET,CACE0B,MAAO,SACP1B,MAAO,YAET,CACE0B,MAAO,UACP1B,MAAO,aAET,CACE0B,MAAO,SACP1B,MAAO,WAET,CACE0B,MAAO,YACP1B,MAAO,aAET,CACE0B,MAAO,UACP1B,MAAO,WAET,CACE0B,MAAO,aACP1B,MAAO,cAET,CACE0B,MAAO,SACP1B,MAAO,UAET,CACE0B,MAAO,QACP1B,MAAO,SAET,CACE0B,MAAO,UACP1B,MAAO,WAET,CACE0B,MAAO,WACP1B,MAAO,YAET,CACE0B,MAAO,QACP1B,MAAO,SAET,CACE0B,MAAO,SACP1B,MAAO,UAET,CACE0B,MAAO,SACP1B,MAAO,UAET,CACE0B,MAAO,UACP1B,MAAO,WAET,CACE0B,MAAO,QACP1B,MAAO,kBAET,CACE0B,MAAO,YACP1B,MAAO,aAET,CACE0B,MAAO,gBACP1B,MAAO,iBAET,CACE0B,MAAO,UACP1B,MAAO,WAET,CACE0B,MAAO,aACP1B,MAAO,kBAET,CACE0B,MAAO,kBACP1B,MAAO,mBAET,CACE0B,MAAO,YACP1B,MAAO,aAET,CACE0B,MAAO,WACP1B,MAAO,YAET,CACE0B,MAAO,cACP1B,MAAO,kBAET,CACE0B,MAAO,aACP1B,MAAO,uBAET,CACE0B,MAAO,aACP1B,MAAO,cAET,CACE0B,MAAO,UACP1B,MAAO,WAET,CACE0B,MAAO,YACP1B,MAAO,aAET,CACE0B,MAAO,WACP1B,MAAO,aAET,CACE0B,MAAO,UACP1B,MAAO,mBAET,CACE0B,MAAO,WACP1B,MAAO,YAET,CACE0B,MAAO,QACP1B,MAAO,SAET,CACE0B,MAAO,SACP1B,MAAO,UAET,CACE0B,MAAO,aACP1B,MAAO,cAET,CACE0B,MAAO,mBACP1B,MAAO,sBAET,CACE0B,MAAO,aACP1B,MAAO,cAET,CACE0B,MAAO,cACP1B,MAAO,eAET,CACE0B,MAAO,WACP1B,MAAO,iBAET,CACE0B,MAAO,UACP1B,MAAO,WAET,CACE0B,MAAO,QA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","file":"static/js/main.b8e8c507.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport \"./home.css\";\n\nconst Home = () => {\n  var cities = [{\"cityname\": \"Austin, TX\", \"AveragePrice\": \"80\", \"Restaurants\":\"90\",\"UpcomingEvents\":\"90\",\"id\":\"austin\"},\n  {\"cityname\": \"New York, NY\", \"AveragePrice\": \"160\", \"Restaurants\":\"1000\",\"UpcomingEvents\":\"100\",'id':\"new-york\"},\n  {\"cityname\": \"Boston, MA\", \"AveragePrice\": \"140\", \"Restaurants\":\"900\",\"UpcomingEvents\":\"120\",\"id\":\"boston\"}\n  ];\n  const rand = cities[Math.floor(Math.random()*3)];\n  \n  // const [image, setImage] = useState(\"\");\n  // useEffect(() => {\n  //   fetch(`https://api.teleport.org/api/urban_areas/slug:${rand['id']}/images/`)\n  //     .then(resp => resp.json())\n  //     .then(data => {\n  //       try {\n  //         setImage(data.photos[0].image.web);\n  //       } catch (error) {\n  //         console.error(\"No image available\");\n  //       }\n  //     });\n  // }, []);\n  // console.log({image});\n  return (\n    <div id=\"home\">\n      <div className=\"title\">\n        <h1>City Hunt</h1>\n        <p className=\"description\">\n          Discover something new!\n          Make your dream vacation happen.. City Hunt is a centralized application designed to simplify travel arrangements.\n          Try our random city generator to start discovering new places!\n          </p>\n      </div>\n      <div className=\"bottom-text-container\">\n        <Container className=\"Container\">\n          <Row>\n            <Col className=\"text\">\n              <p className=\"city-name\">{rand[\"cityname\"]}</p>\n              <p> Average Airbnb Price: {rand[\"AveragePrice\"]}</p>\n              <p> # of restaurants in the area: {rand[\"Restaurants\"]}</p>\n              <p> # of upcoming events in the area: {rand[\"UpcomingEvents\"]}</p>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NotFound = () => (\n  <div className=\"text-center\">\n    <h1>We looked everywhere but couldn't find what you are looking for.</h1>\n    <Link className=\"btn btn-primary \" to=\"/\">\n      Back to home\n    </Link>\n  </div>\n);\n\nexport default NotFound;\n","const domain = \"https://city-hunt-267820.appspot.com\";\nconst local = \"http://127.0.0.1:5000\";\nconst base = `${local}/api`;\n\nconst apiFetch = (url, { method = \"GET\", useApi = true, json = true }) =>\n  fetch(`${useApi ? base : \"\"}${url}`, {\n    method,\n    mode: \"cors\",\n    cache: \"no-cache\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\"\n    },\n    redirect: \"follow\", // manual, *follow, error\n    referrerPolicy: \"no-referrer\" // no-referrer, *client\n  }).then(response => (json ? response.json() : response));\n\nexport default apiFetch;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport {\n  Table,\n  Spinner,\n  Card,\n  Container,\n  Col,\n  Row\n} from \"react-bootstrap\";\nimport apiFetch from \"../lib/api-fetch\";\nimport marshallPhoto from \"../assets/marshall_portrait.jpg\";\nimport yulissaPhoto from \"../assets/yulissa_portrait.jpg\";\nimport quintonPhoto from \"../assets/quinton_portrait.jpg\";\nimport nathanPhoto from \"../assets/nathan_portrait.jpg\";\nimport xindiPhoto from \"../assets/xindi_portrait.jpg\";\nimport \"./about.css\";\n\nconst photos = {\n  marshall: marshallPhoto,\n  yulissa: yulissaPhoto,\n  quinton: quintonPhoto,\n  nathan: nathanPhoto,\n  xindi: xindiPhoto\n};\n\nconst UnitTestResult = ({ response }) => {\n  const { results, spentMilliseconds: totalTime } = response;\n\n  return (\n    <>\n      <Table triped bordered hover variant=\"dark\">\n        <thead>\n          <tr>\n            <th>Statues</th>\n            <th>Description</th>\n            <th>Name</th>\n            <th>Time Spent (ms)</th>\n          </tr>\n        </thead>\n        <tbody>\n          {results.map(({ type, description, name, spentMilliseconds }) => (\n            <tr>\n              <td>{type}</td>\n              <td>{description}</td>\n              <td>{name}</td>\n              <td>{spentMilliseconds}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <p>Total time spent: {totalTime}</p>\n    </>\n  );\n};\n\nconst About = () => {\n  const [people, setPeople] = useState([]);\n  const [unitTestResult, setUnitTestResult] = useState(\"\");\n  useEffect(() => {\n    apiFetch(\"/about\", { json: true, useApi: true }).then(data =>\n      setPeople(data.about)\n    );\n  }, []);\n\n  const runTests = useCallback(() => {\n    apiFetch(\"/unittests\", { json: true }).then(setUnitTestResult);\n  }, []);\n\n  return (\n    <div className=\"about\">\n      <Container>\n        <h1>About Us</h1>\n        <h2>Run unit tests</h2>\n        <button\n          onClick={runTests}\n          type=\"button\"\n          className=\"btn btn-outline-primary w-100 mb-lg-3\"\n        >\n          Run Unit tests\n        </button>\n        {unitTestResult && <UnitTestResult response={unitTestResult} />}\n\n        <h2>The Project</h2>\n        <div className=\"flex-links\">\n          <p>\n            This project connects travellers to cities, food, and events!\n          </p>\n          <h3>Links about our project</h3>\n          <ul>\n            <li>\n              <a\n                href=\"https://gitlab.com/nmcraig/cs-331e/issues\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Our Issue Tracker\n              </a>\n            </li>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://gitlab.com/nmcraig/cs-331e/\"\n              >\n                Our Repo\n              </a>\n            </li>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://gitlab.com/nmcraig/cs-331e/-/wikis/Phase-1-Development\"\n              >\n                Our report for phase 1 Development\n              </a>\n            </li>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://gitlab.com/nmcraig/cs-331e/-/wikis/Phase-2-Development\"\n              >\n                Our report for phase 2 Development\n              </a>\n            </li>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://gitlab.com/nmcraig/cs-331e/-/wikis/Technical-Report\"\n              >\n                The overall technical report\n              </a>\n            </li>\n          </ul>\n\n          <h3>Links about Data</h3>\n          <ul>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"http://developers.teleport.org/api/getting_started/#search_name\"\n              >\n                City Searching Feature and Photo Database\n              </a>\n            </li>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://www.mediawiki.org/wiki/API:Main_page\"\n              >\n                Information about Cities\n              </a>\n            </li>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"http://insideairbnb.com/get-the-data.html\"\n              >\n                Airbnb Data for Different Cities\n              </a>\n            </li>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://www.yelp.com/developers/documentation/v3deairbnb.com/get-the-data.html\"\n              >\n                Yelp Data for Restaurants\n              </a>\n            </li>\n          </ul>\n\n          <h3>Links about Tools</h3>\n          <ul>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://reactjs.org/\"\n              >\n                Frontend - React.js\n              </a>\n            </li>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://palletsprojects.com/p/flask/\"\n              >\n                Backend - Flask\n              </a>\n            </li>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://react-bootstrap.netlify.com/\"\n              >\n                CSS - React-Bootstrap - a bootstrap library for react\n              </a>\n            </li>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://slack.com/\"\n              >\n                Communication and gitlab integration done with Slack\n              </a>\n            </li>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://cloud.google.com/\"\n              >\n                Deployment through Google Cloud Platform\n              </a>\n            </li>\n          </ul>\n        </div>\n\n        <h2>The Team</h2>\n        <Row>\n          {people.length ? (\n            people.map(\n              ({\n                name,\n                responsibilities,\n                stats: { commits, issues },\n                description,\n                id\n              }) => (\n                <Col key={name} xs={12} sm={12} md={6} lg={4} className=\"mb-4\">\n                  <Card>\n                    <Card.Img variant=\"top\" src={photos[id]} alt={name} />\n                    <Card.Body>\n                      <Card.Title>{name}</Card.Title>\n                      <Card.Text>Skills: {responsibilities}</Card.Text>\n                      <Card.Text>Description: {description}</Card.Text>\n                      <Card.Text>Commits: {commits} </Card.Text>\n                      <Card.Text>Issues: {issues} </Card.Text>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              )\n            )\n          ) : (\n            <div className=\"w-100 d-flex justify-content-center\">\n              <Spinner animation=\"border\" variant=\"info\" />\n            </div>\n          )}\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default About;\n","export const filterCities = (venueCity, cities) =>\n  cities.filter(city => city.name === venueCity);\n\nexport const filterArtists = (venueArtist, artists) =>\n  artists.filter(artist => artist.name === venueArtist);\n\nexport const filterVenues = (artistVenue, venues) =>\n  venues.filter(venue => venue.name === artistVenue);\n\nexport const filterVenuesByCities = (city, venues) =>\n  venues.filter(venue => venue.city === city);\n\nexport const getSortableAttributes = schema =>\n  Object.keys(schema).reduce((dict, key) => {\n    if (schema[key].dataSort) {\n      dict[key] = schema[key];\n    }\n    return dict;\n  }, {});\n\nexport const setLocation = callback => {\n  if (navigator.geolocation) {\n    return navigator.geolocation.getCurrentPosition(\n      ({ coords }) => callback(coords),\n      () => {\n        callback(null);\n        console.error(\"unable to get current location\");\n      }\n    );\n  }\n  return \"Geolocation is not supported by this browser.\";\n};\n\nexport const getCityIdByName = cityName =>\n  cityName.toLowerCase().replace(\" \", \"-\");\n\nexport const getGoogleMapLinkByCoordinates = (latitude, longtitude) =>\n  `http://www.google.com/maps/place/${latitude},${longtitude}`;\n\nexport const getWeekDay = num => {\n  const days = [\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n    \"Sunday\"\n  ];\n  return days[num];\n};\n\nexport const getHours = time => {\n  const hour = time.substring(0, 2);\n  const minute = time.substring(2);\n  return `${hour}:${minute}`;\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getCityIdByName } from \"./util\";\n\nexport const MAX_PAGE_NUM = 50;\nexport const LIMIT = 20;\n\n// schema for apiSorting\nexport const RESTAURANT_SORTABLE_SCHEMA = {\n  best_match: { title: \"Best Match\", dataSort: true },\n  rating: { title: \"Rating\", dataSort: true },\n  review_count: { title: \"Review Count\", dataSort: true },\n  distance: { title: \"Distance\", dataSort: true }\n};\n\nexport const EVENT_SORTABLE_SCHEMA = {\n  popularity: { title: \"Popularity\", dataSort: true },\n  time_start: { title: \"Time Start\", dataSort: true }\n};\n\nexport const AIRBNB_SORTABLE_SCHEMA = {\n  price: { title: \"Price\", dataSort: true },\n  accomodates: { title: \"Accomodates\", dataSort: true }\n};\n\n// schema for sortableTable\nexport const AIRBNB_SCHEMA = {\n  image: {\n    title: \"\",\n    getBodyFormat: (_, { picture_url: img, name }) => (\n      <img src={img} alt={name} />\n    ),\n    isKey: false,\n    dataSort: false\n  },\n  name: {\n    title: \"Name\",\n    getBodyFormat: (_, { listing_url, name }) => (\n      <a href={listing_url} target=\"_blank\" rel=\"noopener noreferrer\">\n        {name}\n      </a>\n    ),\n    isKey: true,\n    dataSort: true\n  },\n  price: {\n    title: \"Price per night\",\n    getBodyFormat: (_, { price }) => <span>{price}</span>,\n    isKey: false,\n    dataSort: true\n  },\n  accomodates: {\n    title: \"Accomodates\",\n    getBodyFormat: (_, { accomodates }) => <span>{accomodates}</span>,\n    isKey: false,\n    dataSort: true\n  },\n  review_score: {\n    title: \"Rating out of 100\",\n    getBodyFormat: (_, { review_scores_rating }) => (\n      <span>{review_scores_rating}</span>\n    ),\n    isKey: false,\n    dataSort: true\n  },\n  number_of_reviews: {\n    title: \"# of Reviews\",\n    getBodyFormat: (_, { number_of_reviews }) => (\n      <span>{number_of_reviews}</span>\n    ),\n    isKey: false,\n    dataSort: true\n  },\n  zipcode: {\n    title: \"Zipcode\",\n    getBodyFormat: (_, { zipcode }) => <span>{zipcode}</span>,\n    isKey: false,\n    dataSort: true\n  },\n  description: {\n    title: \"Description\",\n    getBodyFormat: (_, { neighborhood_overview, listing_url }) => (\n      <span>\n        {`${neighborhood_overview.substring(0, 200)} ...`}\n        <a href={listing_url} target=\"_blank\" rel=\"noopener noreferrer\">\n          READ MORE\n        </a>\n      </span>\n    ),\n    isKey: false,\n    dataSort: true\n  }\n};\n\nexport const RESTAURANT_SCHEMA = {\n  image: {\n    title: \"\",\n    getBodyFormat: (_, { image_url: img, name }) => (\n      <img src={img} alt={name} />\n    ),\n    isKey: false,\n    dataSort: false\n  },\n  name: {\n    title: \"Restaurants\",\n    getBodyFormat: (_, { alias, name }) => (\n      <Link to={`/restaurant/${alias}`}>{name}</Link>\n    ),\n    isKey: true,\n    dataSort: true\n  },\n  distance: {\n    title: \"Distance\",\n    getBodyFormat: (_, { distance }) => <span>{Number(distance).toFixed(2)} yd.</span>,\n    isKey: false,\n    dataSort: true\n  },\n  location: {\n    title: \"Address\",\n    getBodyFormat: (_, { location: { display_address: address } }) => (\n      <span>{address.join(\", \")}</span>\n    ),\n    isKey: false,\n    dataSort: false\n  },\n  categories: {\n    title: \"Categories\",\n    getBodyFormat: (_, { categories }) => (\n      <span>{categories.map(category => category.title).join(\", \")}</span>\n    ),\n    isKey: false,\n    dataSort: false\n  },\n  price: {\n    title: \"Price\",\n    getBodyFormat: (_, { price }) => <span>{price}</span>,\n    isKey: false,\n    dataSort: true\n  },\n  rating: {\n    title: \"Rating\",\n    getBodyFormat: (_, { rating }) => <span>{rating}</span>,\n    isKey: false,\n    dataSort: true\n  },\n  review_count: {\n    title: \"Review Count\",\n    getBodyFormat: (_, { review_count: reviews }) => <span>{reviews}</span>,\n    isKey: false,\n    dataSort: true\n  },\n  url: {\n    title: \"URL\",\n    getBodyFormat: (_, { url }) => (\n      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n        Yelp\n      </a>\n    ),\n    isKey: false,\n    dataSort: false\n  }\n};\n\nexport const RESTAURANTS_PAGE_SCHEMA = {\n  ...RESTAURANT_SCHEMA,\n  city: {\n    title: \"City\",\n    getBodyFormat: (_, { location: { city } }) => (\n      <Link to={`/city/${getCityIdByName(city)}`}>{city}</Link>\n    )\n  }\n};\n\nexport const EVENT_SCHEMA = {\n  name: {\n    title: \"Events\",\n    getBodyFormat: (_, { id, name }) => <Link to={`/event/${id}`}>{name}</Link>,\n    isKey: true,\n    dataSort: true\n  },\n  location: {\n    title: \"Address\",\n    getBodyFormat: (_, { location: { display_address: address } }) => (\n      <span>{address.join(\", \")}</span>\n    ),\n    isKey: false,\n    dataSort: false\n  },\n  interested_count: {\n    title: \"Interested Count\",\n    getBodyFormat: (_, { interested_count: count }) => <span>{count}</span>,\n    isKey: false,\n    dataSort: true\n  },\n  is_free: {\n    title: \"Free\",\n    getBodyFormat: (_, { is_free: isFree }) => (\n      <span>{isFree ? \"Yes\" : \"No\"}</span>\n    ),\n    isKey: false,\n    dataSort: true\n  },\n  description: {\n    title: \"Description\",\n    getBodyFormat: (_, { description }) => <span>{description}</span>,\n    isKey: false,\n    dataSort: false\n  },\n  category: {\n    title: \"Category\",\n    getBodyFormat: (_, { category }) => <span>{category}</span>,\n    isKey: false,\n    dataSort: true\n  },\n  time: {\n    title: \"Time\",\n    getBodyFormat: (_, { time_start: start, time_end: end }) => (\n      // TODO: format year if no year presents in end\n      // TODO: format as May 24, 2020\n      <span>\n        {new Date(start).toLocaleDateString()} -{\" \"}\n        {new Date(end).toLocaleDateString()}\n      </span>\n    ),\n    isKey: false,\n    dataSort: true\n  },\n  url: {\n    title: \"URL\",\n    getBodyFormat: (_, { event_site_url: url }) => (\n      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n        Yelp\n      </a>\n    ),\n    isKey: false,\n    dataSort: false\n  }\n};\n\nexport const EVENTS_PAGE_SCHEMA = {\n  ...EVENT_SCHEMA,\n  city: {\n    title: \"City\",\n    getBodyFormat: (_, { location: { city } }) => (\n      <Link to={`/city/${getCityIdByName(city)}`}>{city}</Link>\n    )\n  }\n};\n\nexport const CITY_SCHEMA = {\n  image: {\n    title: \"Picture\",\n    getBodyFormat: _ => <span>INSERT PICTURE HERE</span>,\n    isKey: false,\n    dataSort: false\n  },\n  name: {\n    title: \"City\",\n    getBodyFormat: (_, { id, name }) => <Link to={`/city/${id}`}>{name}</Link>,\n    isKey: true,\n    dataSort: true\n  },\n  state: {\n    title: \"State\",\n    getBodyFormat: (_, { state }) => <span>{state}</span>,\n    isKey: false,\n    dataSort: true\n  },\n  population: {\n    title: \"Population\",\n    getBodyFormat: (_, { population }) => <span>{population}</span>,\n    isKey: false,\n    dataSort: true\n  },\n  description: {\n    title: \"Description\",\n    getBodyFormat: (_, { description }) => <span>{description}</span>,\n    isKey: false,\n    dataSort: false\n  }\n};\n\nexport const ORDER_SCHEMA = [\n  { title: \"Ascending\", key: \"asc\" },\n  { title: \"Descending\", key: \"desc\" }\n];\nexport const CATEGORIES = [\n  {\n    alias: \"afghani\",\n    title: \"Afghan\"\n  },\n  {\n    alias: \"african\",\n    title: \"African\"\n  },\n  {\n    alias: \"arabian\",\n    title: \"Arabian\"\n  },\n  {\n    alias: \"argentine\",\n    title: \"Argentine\"\n  },\n  {\n    alias: \"armenian\",\n    title: \"Armenian\"\n  },\n  {\n    alias: \"asianfusion\",\n    title: \"Asian Fusion\"\n  },\n  {\n    alias: \"australian\",\n    title: \"Australian\"\n  },\n  {\n    alias: \"austrian\",\n    title: \"Austrian\"\n  },\n  {\n    alias: \"bangladeshi\",\n    title: \"Bangladeshi\"\n  },\n  {\n    alias: \"basque\",\n    title: \"Basque\"\n  },\n  {\n    alias: \"bbq\",\n    title: \"Barbeque\"\n  },\n  {\n    alias: \"belgian\",\n    title: \"Belgian\"\n  },\n  {\n    alias: \"brasseries\",\n    title: \"Brasseries\"\n  },\n  {\n    alias: \"brazilian\",\n    title: \"Brazilian\"\n  },\n  {\n    alias: \"breakfast_brunch\",\n    title: \"Breakfast & Brunch\"\n  },\n  {\n    alias: \"british\",\n    title: \"British\"\n  },\n  {\n    alias: \"buffets\",\n    title: \"Buffets\"\n  },\n  {\n    alias: \"bulgarian\",\n    title: \"Bulgarian\"\n  },\n  {\n    alias: \"burgers\",\n    title: \"Burgers\"\n  },\n  {\n    alias: \"burmese\",\n    title: \"Burmese\"\n  },\n  {\n    alias: \"cafes\",\n    title: \"Cafes\"\n  },\n  {\n    alias: \"cafeteria\",\n    title: \"Cafeteria\"\n  },\n  {\n    alias: \"cajun\",\n    title: \"Cajun/Creole\"\n  },\n  {\n    alias: \"cambodian\",\n    title: \"Cambodian\"\n  },\n  {\n    alias: \"caribbean\",\n    title: \"Caribbean\"\n  },\n  {\n    alias: \"catalan\",\n    title: \"Catalan\"\n  },\n  {\n    alias: \"cheesesteaks\",\n    title: \"Cheesesteaks\"\n  },\n  {\n    alias: \"chicken_wings\",\n    title: \"Chicken Wings\"\n  },\n  {\n    alias: \"chickenshop\",\n    title: \"Chicken Shop\"\n  },\n  {\n    alias: \"chinese\",\n    title: \"Chinese\"\n  },\n  {\n    alias: \"comfortfood\",\n    title: \"Comfort Food\"\n  },\n  {\n    alias: \"creperies\",\n    title: \"Creperies\"\n  },\n  {\n    alias: \"cuban\",\n    title: \"Cuban\"\n  },\n  {\n    alias: \"czech\",\n    title: \"Czech\"\n  },\n  {\n    alias: \"delis\",\n    title: \"Delis\"\n  },\n  {\n    alias: \"diners\",\n    title: \"Diners\"\n  },\n  {\n    alias: \"dinnertheater\",\n    title: \"Dinner Theater\"\n  },\n  {\n    alias: \"eritrean\",\n    title: \"Eritrean\"\n  },\n  {\n    alias: \"ethiopian\",\n    title: \"Ethiopian\"\n  },\n  {\n    alias: \"filipino\",\n    title: \"Filipino\"\n  },\n  {\n    alias: \"fishnchips\",\n    title: \"Fish & Chips\"\n  },\n  {\n    alias: \"fondue\",\n    title: \"Fondue\"\n  },\n  {\n    alias: \"food_court\",\n    title: \"Food Court\"\n  },\n  {\n    alias: \"foodstands\",\n    title: \"Food Stands\"\n  },\n  {\n    alias: \"french\",\n    title: \"French\"\n  },\n  {\n    alias: \"gamemeat\",\n    title: \"Game Meat\"\n  },\n  {\n    alias: \"gastropubs\",\n    title: \"Gastropubs\"\n  },\n  {\n    alias: \"georgian\",\n    title: \"Georgian\"\n  },\n  {\n    alias: \"german\",\n    title: \"German\"\n  },\n  {\n    alias: \"gluten_free\",\n    title: \"Gluten-Free\"\n  },\n  {\n    alias: \"greek\",\n    title: \"Greek\"\n  },\n  {\n    alias: \"guamanian\",\n    title: \"Guamanian\"\n  },\n  {\n    alias: \"halal\",\n    title: \"Halal\"\n  },\n  {\n    alias: \"hawaiian\",\n    title: \"Hawaiian\"\n  },\n  {\n    alias: \"himalayan\",\n    title: \"Himalayan/Nepalese\"\n  },\n  {\n    alias: \"hkcafe\",\n    title: \"Hong Kong Style Cafe\"\n  },\n  {\n    alias: \"honduran\",\n    title: \"Honduran\"\n  },\n  {\n    alias: \"hotdog\",\n    title: \"Hot Dogs\"\n  },\n  {\n    alias: \"hotdogs\",\n    title: \"Fast Food\"\n  },\n  {\n    alias: \"hotpot\",\n    title: \"Hot Pot\"\n  },\n  {\n    alias: \"hungarian\",\n    title: \"Hungarian\"\n  },\n  {\n    alias: \"iberian\",\n    title: \"Iberian\"\n  },\n  {\n    alias: \"indonesian\",\n    title: \"Indonesian\"\n  },\n  {\n    alias: \"indpak\",\n    title: \"Indian\"\n  },\n  {\n    alias: \"irish\",\n    title: \"Irish\"\n  },\n  {\n    alias: \"italian\",\n    title: \"Italian\"\n  },\n  {\n    alias: \"japanese\",\n    title: \"Japanese\"\n  },\n  {\n    alias: \"kebab\",\n    title: \"Kebab\"\n  },\n  {\n    alias: \"korean\",\n    title: \"Korean\"\n  },\n  {\n    alias: \"kosher\",\n    title: \"Kosher\"\n  },\n  {\n    alias: \"laotian\",\n    title: \"Laotian\"\n  },\n  {\n    alias: \"latin\",\n    title: \"Latin American\"\n  },\n  {\n    alias: \"malaysian\",\n    title: \"Malaysian\"\n  },\n  {\n    alias: \"mediterranean\",\n    title: \"Mediterranean\"\n  },\n  {\n    alias: \"mexican\",\n    title: \"Mexican\"\n  },\n  {\n    alias: \"mideastern\",\n    title: \"Middle Eastern\"\n  },\n  {\n    alias: \"modern_european\",\n    title: \"Modern European\"\n  },\n  {\n    alias: \"mongolian\",\n    title: \"Mongolian\"\n  },\n  {\n    alias: \"moroccan\",\n    title: \"Moroccan\"\n  },\n  {\n    alias: \"newamerican\",\n    title: \"American (New)\"\n  },\n  {\n    alias: \"newmexican\",\n    title: \"New Mexican Cuisine\"\n  },\n  {\n    alias: \"nicaraguan\",\n    title: \"Nicaraguan\"\n  },\n  {\n    alias: \"noodles\",\n    title: \"Noodles\"\n  },\n  {\n    alias: \"pakistani\",\n    title: \"Pakistani\"\n  },\n  {\n    alias: \"panasian\",\n    title: \"Pan Asian\"\n  },\n  {\n    alias: \"persian\",\n    title: \"Persian/Iranian\"\n  },\n  {\n    alias: \"peruvian\",\n    title: \"Peruvian\"\n  },\n  {\n    alias: \"pizza\",\n    title: \"Pizza\"\n  },\n  {\n    alias: \"polish\",\n    title: \"Polish\"\n  },\n  {\n    alias: \"polynesian\",\n    title: \"Polynesian\"\n  },\n  {\n    alias: \"popuprestaurants\",\n    title: \"Pop-Up Restaurants\"\n  },\n  {\n    alias: \"portuguese\",\n    title: \"Portuguese\"\n  },\n  {\n    alias: \"poutineries\",\n    title: \"Poutineries\"\n  },\n  {\n    alias: \"raw_food\",\n    title: \"Live/Raw Food\"\n  },\n  {\n    alias: \"russian\",\n    title: \"Russian\"\n  },\n  {\n    alias: \"salad\",\n    title: \"Salad\"\n  },\n  {\n    alias: \"sandwiches\",\n    title: \"Sandwiches\"\n  },\n  {\n    alias: \"scandinavian\",\n    title: \"Scandinavian\"\n  },\n  {\n    alias: \"scottish\",\n    title: \"Scottish\"\n  },\n  {\n    alias: \"seafood\",\n    title: \"Seafood\"\n  },\n  {\n    alias: \"singaporean\",\n    title: \"Singaporean\"\n  },\n  {\n    alias: \"slovakian\",\n    title: \"Slovakian\"\n  },\n  {\n    alias: \"somali\",\n    title: \"Somali\"\n  },\n  {\n    alias: \"soulfood\",\n    title: \"Soul Food\"\n  },\n  {\n    alias: \"soup\",\n    title: \"Soup\"\n  },\n  {\n    alias: \"southern\",\n    title: \"Southern\"\n  },\n  {\n    alias: \"spanish\",\n    title: \"Spanish\"\n  },\n  {\n    alias: \"srilankan\",\n    title: \"Sri Lankan\"\n  },\n  {\n    alias: \"steak\",\n    title: \"Steakhouses\"\n  },\n  {\n    alias: \"supperclubs\",\n    title: \"Supper Clubs\"\n  },\n  {\n    alias: \"sushi\",\n    title: \"Sushi Bars\"\n  },\n  {\n    alias: \"syrian\",\n    title: \"Syrian\"\n  },\n  {\n    alias: \"taiwanese\",\n    title: \"Taiwanese\"\n  },\n  {\n    alias: \"tapas\",\n    title: \"Tapas Bars\"\n  },\n  {\n    alias: \"tapasmallplates\",\n    title: \"Tapas/Small Plates\"\n  },\n  {\n    alias: \"tex-mex\",\n    title: \"Tex-Mex\"\n  },\n  {\n    alias: \"thai\",\n    title: \"Thai\"\n  },\n  {\n    alias: \"tradamerican\",\n    title: \"American (Traditional)\"\n  },\n  {\n    alias: \"turkish\",\n    title: \"Turkish\"\n  },\n  {\n    alias: \"ukrainian\",\n    title: \"Ukrainian\"\n  },\n  {\n    alias: \"uzbek\",\n    title: \"Uzbek\"\n  },\n  {\n    alias: \"vegan\",\n    title: \"Vegan\"\n  },\n  {\n    alias: \"vegetarian\",\n    title: \"Vegetarian\"\n  },\n  {\n    alias: \"vietnamese\",\n    title: \"Vietnamese\"\n  },\n  {\n    alias: \"waffles\",\n    title: \"Waffles\"\n  },\n  {\n    alias: \"wraps\",\n    title: \"Wraps\"\n  }\n];\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nimport { Spinner } from \"react-bootstrap\";\nimport \"./sortable-table.css\";\n\nconst SortableTable = ({ data, settings }) => {\n  const options = {\n    noDataText: (\n      <div className=\"w-100 d-flex justify-content-center\">\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      </div>\n    )\n  };\n\n  return (\n    <BootstrapTable\n      version=\"4\"\n      data={data}\n      options={options}\n      tableStyle={{ marginBottom: 0 }}\n      striped\n      hover\n      tableBodyClass=\"table-dark\"\n      tableHeaderClass=\"table-dark\"\n    >\n      {Object.keys(settings).map(key => {\n        const {\n          getBodyFormat,\n          title,\n          isKey,\n          dataSort,\n          sortFunc,\n          width\n        } = settings[key];\n        return (\n          <TableHeaderColumn\n            key={key}\n            isKey={isKey}\n            dataField={key}\n            dataFormat={(_, row) => getBodyFormat(key, row)}\n            dataSort={dataSort}\n            width={width}\n            sortFunc={sortFunc}\n          >\n            {title}\n          </TableHeaderColumn>\n        );\n      })}\n    </BootstrapTable>\n  );\n};\n\nSortableTable.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  settings: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    getBodyFormat: PropTypes.func.isRequired,\n    isKey: PropTypes.bool.isRequired,\n    dataSort: PropTypes.bool.isRequired,\n    sortFunc: PropTypes.func,\n    width: PropTypes.number\n  }).isRequired\n};\n\nexport default SortableTable;\n","import React, {useState} from \"react\";\nimport { Toast } from \"react-bootstrap\";\n\nconst ToastNote = (message) => {\n    const [showA, setShowA] = useState(true);\n    const toggleShowA = () => setShowA(!showA);\n\n    return (\n        <Toast show={showA} onClose={toggleShowA} style={{margin: 'auto'}}\n        >\n            <Toast.Header style={{margin:'auto'}}>\n                <strong style={{color:'red'}}>Error</strong>\n            </Toast.Header>\n            <Toast.Body>\n                Data is not found.\n            </Toast.Body>\n        </Toast>\n        );\n};\n    \nexport default ToastNote;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Pagination as BSPagination } from \"react-bootstrap\";\nimport \"./pagination.css\";\n\nimport { MAX_PAGE_NUM, LIMIT } from \"../lib/constants\";\n\nconst MAX_NUM_BUTTONS = 5;\n\nconst getButtons = (currentPage, totalPages) => {\n  if (totalPages > MAX_NUM_BUTTONS) {\n    let startsAt = currentPage - 2;\n    if (startsAt < 1) {\n      startsAt = 1;\n    }\n    if (currentPage + 2 >= totalPages) {\n      startsAt = totalPages - MAX_NUM_BUTTONS + 1;\n    }\n\n    return [...Array(MAX_NUM_BUTTONS).keys()].map(key => key + startsAt);\n  }\n\n  return [...Array(totalPages).keys()].map(key => key + 1);\n};\n\nconst Pagination = ({ totalRecords, loadPage, currentPage }) => {\n  const totalPages = Math.min(Math.floor(totalRecords / LIMIT), MAX_PAGE_NUM);\n\n  const paginationButtons = getButtons(currentPage, totalPages);\n\n  const goToPage = num => {\n    if (num === currentPage) {\n      return;\n    }\n\n    loadPage(num);\n  };\n\n  return (\n    <BSPagination>\n      <BSPagination.First\n        onClick={() => goToPage(1)}\n        disabled={currentPage === 1}\n      />\n      <BSPagination.Prev\n        onClick={() => goToPage(currentPage - 1)}\n        disabled={currentPage - 1 < 1}\n      />\n      {paginationButtons[0] !== 1 && <BSPagination.Ellipsis />}\n      {paginationButtons.map(num => (\n        <BSPagination.Item\n          onClick={() => goToPage(num)}\n          key={num}\n          active={num === currentPage}\n        >\n          {num}\n        </BSPagination.Item>\n      ))}\n      {paginationButtons[paginationButtons.length - 1] !== totalPages && (\n        <BSPagination.Ellipsis />\n      )}\n      <BSPagination.Next\n        onClick={() => goToPage(currentPage + 1)}\n        disabled={currentPage + 1 > totalPages}\n      />\n      <BSPagination.Last\n        onClick={() => goToPage(totalPages)}\n        disabled={currentPage === totalPages}\n      />\n    </BSPagination>\n  );\n};\n\nPagination.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  loadPage: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ButtonGroup, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport { getSortableAttributes } from \"../lib/util\";\nimport { ORDER_SCHEMA } from \"../lib/constants\";\n\nconst SortOn = ({ sortOn, updateSortOn, schema }) => {\n  const sortableAttributes = getSortableAttributes(schema);\n  const { sort, order } = sortOn;\n  return (\n    <div>\n      <DropdownButton\n        as={ButtonGroup}\n        variant=\"outline-primary\"\n        title={`Sort on ${\n          sortableAttributes[sort] ? sortableAttributes[sort].title : \"\"\n        }`}\n        alignRight\n      >\n        {Object.keys(sortableAttributes).map(key => (\n          <Dropdown.Item\n            key={key}\n            eventKey={key}\n            active={key === sort}\n            onClick={() => {\n              // use the following instead of disabled to preserve active style\n              if (key === sort) {\n                return;\n              }\n              updateSortOn({ ...sortOn, sort: key });\n            }}\n          >\n            {sortableAttributes[key].title}\n          </Dropdown.Item>\n        ))}\n      </DropdownButton>\n      {order && (\n        <DropdownButton\n          as={ButtonGroup}\n          variant=\"outline-primary\"\n          title={(ORDER_SCHEMA.find(({ key }) => key === order) || {}).title}\n          alignRight\n        >\n          {ORDER_SCHEMA.map(({ title, key }) => (\n            <Dropdown.Item\n              key={key}\n              eventKey={key}\n              active={key === order}\n              onClick={() => {\n                if (key === order) {\n                  return;\n                }\n                updateSortOn({ ...sortOn, order: key });\n              }}\n            >\n              {title}\n            </Dropdown.Item>\n          ))}\n        </DropdownButton>\n      )}\n    </div>\n  );\n};\n\nSortOn.propTypes = {\n  sortOn: PropTypes.shape({\n    sort: PropTypes.string.isRequired,\n    order: PropTypes.oneOf([\"asc\", \"desc\"])\n  }).isRequired,\n  updateSortOn: PropTypes.func.isRequired,\n  schema: PropTypes.object.isRequired\n};\n\nexport default SortOn;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TagsInput from \"react-tagsinput\";\nimport Autosuggest from \"react-autosuggest\";\nimport { Button } from \"react-bootstrap\";\nimport \"./tag-input.css\";\n\nclass TagInput extends React.Component {\n  constructor() {\n    super();\n    this.state = { tags: [] };\n  }\n\n  handleChange = tags => {\n    this.setState({ tags });\n  };\n\n  render() {\n    const { getAllSuggestions, submit } = this.props;\n    const { tags } = this.state;\n    function autocompleteRenderInput({ addTag, ...props }) {\n      const { value, ref, onChange } = props;\n      const handleOnChange = (e, { newValue, method }) => {\n        if (method === \"enter\") {\n          e.preventDefault();\n        } else {\n          onChange(e);\n        }\n      };\n\n      const inputValue = (value && value.trim().toLowerCase()) || \"\";\n      const inputLength = inputValue.length;\n\n      const suggestions = getAllSuggestions().filter(\n        suggestion =>\n          suggestion.title.toLowerCase().slice(0, inputLength) === inputValue\n      );\n\n      // TODO: enter to add top suggestion\n      // TODO: make the container float - react portal\n      // TODO: styling\n\n      return (\n        <Autosuggest\n          ref={ref}\n          suggestions={suggestions}\n          shouldRenderSuggestions={item => item && item.trim().length > 0}\n          getSuggestionValue={suggestion => suggestion.title}\n          renderSuggestion={suggestion => <span>{suggestion.title}</span>}\n          inputProps={{ ...props, onChange: handleOnChange }}\n          onSuggestionSelected={(e, { suggestion }) => {\n            addTag(suggestion.title);\n          }}\n          onSuggestionsClearRequested={() => {}}\n          onSuggestionsFetchRequested={() => {}}\n        />\n      );\n    }\n\n    return (\n      <div className=\"row no-gutters justify-content-between\">\n        <TagsInput\n          renderInput={autocompleteRenderInput}\n          value={tags}\n          onChange={this.handleChange}\n        />\n\n        <Button variant=\"outline-primary\" onClick={() => submit(tags)}>\n          Filter\n        </Button>\n      </div>\n    );\n  }\n}\n\nTagInput.propTypes = {\n  submit: PropTypes.func.isRequired,\n  getAllSuggestions: PropTypes.func.isRequired\n};\n\nexport default TagInput;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TagInput from \"./tag-input\";\n\nconst FilterOn = ({ filterSchema, filterOn, updateFilterOn }) => {\n  const { category: categorySchema } = filterSchema;\n\n  if (categorySchema) {\n    return (\n      <TagInput\n        getAllSuggestions={() => categorySchema}\n        submit={categories => {\n          updateFilterOn({\n            ...filterOn,\n            category: categorySchema.filter(item =>\n              categories.includes(item.title)\n            )\n          });\n        }}\n      />\n    );\n  }\n\n  return <></>;\n};\n\nFilterOn.defaultProps = {\n  filterSchema: {},\n  filterOn: \"\"\n};\n\nFilterOn.propTypes = {\n  filterSchema: PropTypes.object,\n  filterOn: PropTypes.string,\n  updateFilterOn: PropTypes.func.isRequired\n};\n\nexport default FilterOn;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import {\n//   ButtonToolbar,\n//   ButtonGroup,\n//   InputGroup,\n//   FormControl\n// } from \"react-bootstrap\";\nimport Pagination from \"../components/pagination\";\nimport SortOn from \"../components/sort-on\";\nimport FilterOn from \"../components/filter-on\";\nimport \"./table-actions.css\";\n\nconst TableActions = ({\n  totalRecords,\n  loadPage,\n  currentPage,\n  sortOn,\n  filterOn,\n  updateSortOn,\n  updateFilterOn,\n  sortSchema,\n  filterSchema\n}) => {\n  return (\n    <div\n      className=\"table-actions\"\n      role=\"toolbar\"\n      aria-label=\"Table actions, includes pagination, sort options, and a search bar\"\n    >\n      {/* <InputGroup className=\"mb-2\">\n        <InputGroup.Prepend>\n          <InputGroup.Text>@</InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          type=\"text\"\n          placeholder=\"Search\"\n          aria-label=\"search\"\n          aria-describedby=\"btnGroupAddon2\"\n        />\n      </InputGroup> */}\n      <FilterOn\n        className=\"mb-2\"\n        filterSchema={filterSchema}\n        filterOn={filterOn}\n        updateFilterOn={updateFilterOn}\n      />\n\n      <div className=\"row no-gutters justify-content-between\">\n        <Pagination\n          totalRecords={totalRecords}\n          loadPage={loadPage}\n          currentPage={currentPage}\n        />\n\n        <SortOn\n          sortOn={sortOn}\n          updateSortOn={updateSortOn}\n          schema={sortSchema}\n        />\n      </div>\n    </div>\n  );\n};\n\nTableActions.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  loadPage: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  filterSchema: PropTypes.object.isRequired,\n  filterOn: PropTypes.string.isRequired,\n  updateFilterOn: PropTypes.func.isRequired,\n  sortSchema: PropTypes.object.isRequired,\n  sortOn: PropTypes.shape({\n    sort: PropTypes.string.isRequired,\n    order: PropTypes.oneOf([\"asc\", \"desc\"])\n  }).isRequired,\n  updateSortOn: PropTypes.func.isRequired\n};\n\nexport default TableActions;\n","import { useState, useCallback } from \"react\";\nimport qs from \"qs\";\nimport apiFetch from \"../lib/api-fetch\";\n\nconst getUrl = (url, params) => {\n  const query = qs.stringify(params);\n  if (query) {\n    return url.indexOf(\"?\") ? `${url}?${query}` : `${url}&${query}`;\n  }\n  return url;\n};\n\nconst useDataStore = init => {\n  const { url, params: initialParams, name, option = {} } = init();\n  const [recordsByPage, setRecordsByPage] = useState([]);\n  const [recordsCount, setRecordsCount] = useState(1);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [params, setParams] = useState(initialParams);\n\n  const [fetching, setFetching] = useState(false);\n  const [error, setError] = useState(false);\n  const [complete, setComplete] = useState(false);\n\n  const reset = () => {\n    setRecordsByPage([]);\n    setRecordsCount(1);\n    setCurrentPage(1);\n    setComplete(false);\n  };\n\n  const onFetchSuccess = useCallback(\n    ({ response }, page) => {\n      setRecordsByPage({ ...recordsByPage, [page]: response[name] });\n      setCurrentPage(page);\n      setRecordsCount(response.total);\n      setFetching(false);\n      setError(false);\n    },\n    [name, recordsByPage]\n  );\n\n  const onFetchFail = useCallback(err => {\n    setFetching(false);\n    setError(true);\n    throw err;\n  }, []);\n\n  const fetchWithUrl = useCallback(urlToFetch => apiFetch(urlToFetch, option), [\n    option\n  ]);\n\n  const fetchPage = useCallback(\n    page => {\n      if (recordsByPage[page]) {\n        return setCurrentPage(page);\n      }\n\n      const newParams = {\n        ...params,\n        page\n      };\n      const newURL = getUrl(url, newParams);\n      setParams(newParams);\n      return fetchWithUrl(newURL)\n        .then(resp => {\n          onFetchSuccess(resp, page);\n          return resp;\n        })\n        .catch(err => {\n          onFetchFail(err);\n          return err;\n        });\n    },\n    [fetchWithUrl, onFetchFail, onFetchSuccess, params, recordsByPage, url]\n  );\n\n  const sort = ({ sort, order }) => {\n    if (sort === params.sort && order === params.order) {\n      return;\n    }\n    reset();\n    const newParams = {\n      ...params,\n      page: 1,\n      sort,\n      order\n    };\n    const newURL = getUrl(url, newParams);\n\n    setParams(newParams);\n    fetchWithUrl(newURL)\n      .then(resp => {\n        onFetchSuccess(resp, 1);\n        return resp;\n      })\n      .catch(err => {\n        onFetchFail(err);\n        return err;\n      });\n  };\n\n  const filter = filterOn => {\n    if (filterOn === params.filter) {\n      return;\n    }\n    reset();\n\n    const newParams = {\n      ...params,\n      page: 1,\n      ...filterOn\n    };\n\n    const newURL = getUrl(url, newParams);\n    setParams(newParams);\n    fetchWithUrl(newURL)\n      .then(resp => {\n        onFetchSuccess(resp, 1);\n        return resp;\n      })\n      .catch(err => {\n        onFetchFail(err);\n        return err;\n      });\n  };\n\n  return [\n    {\n      recordsCount,\n      pageRecords: recordsByPage[currentPage] || [],\n      fetching,\n      complete,\n      currentPage\n    },\n    {\n      fetchPage,\n      sort,\n      filter\n    }\n  ];\n};\n\nexport default useDataStore;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { CITY_SCHEMA } from \"../lib/constants\";\nimport SortableTable from \"../components/sortable-table\";\nimport Toast from \"../components/toast\";\nimport TableActions from \"./table-actions\";\nimport useDataStore from \"../hooks/use-data-store\";\n\nconst Cities = () => {\n  const [isError, setIsError] = useState(false);\n  const [sortOn, setSortOn] = useState({\n    sort: \"name\",\n    order: \"asc\"\n  });\n\n  const [\n    { recordsCount, fetching, pageRecords, currentPage },\n    { fetchPage, sort }\n  ] = useDataStore(() => ({\n    url: `/cities`,\n    params: {\n      page: 1,\n      sort: sortOn\n    },\n    name: \"cities\",\n    option: {\n      json: true\n    }\n  }));\n\n  useEffect(() => {\n    fetchPage(1).catch(() => setIsError(true));\n    // only fetch once when mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const updateSortOn = useCallback(\n    newSortOn => {\n      setSortOn(newSortOn);\n      sort(newSortOn);\n    },\n    [sort]\n  );\n\n  if (fetching) {\n    return <>Loading...</>;\n  }\n  if (isError) {\n    return <Toast />;\n  }\n  return (\n    <Container fluid>\n      <TableActions\n        totalRecords={recordsCount}\n        loadPage={fetchPage}\n        currentPage={currentPage}\n        sortSchema={CITY_SCHEMA}\n        sortOn={sortOn}\n        updateSortOn={updateSortOn}\n      />\n      <SortableTable settings={CITY_SCHEMA} data={pageRecords} />\n    </Container>\n  );\n};\n\nexport default Cities;\n","import React from \"react\";\nimport \"./cities.css\";\nimport Cities from \"../containers/cities\";\n\nconst CitiesPage = () => (\n  <>\n    <h1>Cities</h1>\n    <Cities />\n  </>\n);\n\nexport default CitiesPage;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container } from \"react-bootstrap\";\nimport { RESTAURANT_SORTABLE_SCHEMA, CATEGORIES } from \"../lib/constants\";\nimport SortableTable from \"../components/sortable-table\";\nimport Toast from \"../components/toast\";\nimport TableActions from \"./table-actions\";\nimport useDataStore from \"../hooks/use-data-store\";\n\nconst getCategory = filters => {\n  const { category } = filters;\n  let categoryAlias = \"\";\n  if (category) {\n    categoryAlias = category.map(item => item.alias).join(\",\");\n  }\n  return categoryAlias;\n};\n\nconst initDataStore = (city, coordinates, initialFilters, initialSortOn) => {\n  const categoryAlias = getCategory(initialFilters);\n  const { sort, order } = initialSortOn;\n  if (city) {\n    return {\n      url: `/restaurants/${city}`,\n      params: {\n        page: 1,\n        sort,\n        order,\n        category: categoryAlias\n      },\n      name: \"businesses\"\n    };\n  }\n  const { longitude, latitude } = coordinates;\n  return {\n    url: `/restaurants`,\n    params: {\n      page: 1,\n      sort,\n      order,\n      longitude,\n      latitude,\n      categories: categoryAlias\n    },\n    name: \"businesses\"\n  };\n};\n\nconst Restaurants = ({ city, coordinates, initialFilters, tableSchema }) => {\n  const [isError, setIsError] = useState(false);\n  const [sortOn, setSortOn] = useState({\n    sort: \"best_match\"\n  });\n  const [filterOn, setFilterOn] = useState(initialFilters);\n\n  const [\n    { recordsCount, fetching, pageRecords, currentPage },\n    { fetchPage, sort, filter }\n  ] = useDataStore(() => initDataStore(city, coordinates, filterOn, sortOn));\n\n  useEffect(() => {\n    fetchPage(1).catch(() => setIsError(true));\n    // only fetch once when mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const updateSortOn = useCallback(\n    newSortOn => {\n      setSortOn(newSortOn);\n      sort(newSortOn);\n    },\n    [sort]\n  );\n\n  const updateFilterOn = useCallback(\n    newFilterOn => {\n      setFilterOn(newFilterOn);\n      filter({ categories: getCategory(newFilterOn) });\n    },\n    [filter]\n  );\n\n  if (fetching) {\n    return <>Loading...</>;\n  }\n  if (isError) {\n    return <Toast />;\n  }\n  return (\n    <Container fluid>\n      <TableActions\n        totalRecords={recordsCount}\n        loadPage={fetchPage}\n        currentPage={currentPage}\n        sortSchema={RESTAURANT_SORTABLE_SCHEMA}\n        filterSchema={{ category: CATEGORIES }}\n        sortOn={sortOn}\n        filterOn={filterOn}\n        updateSortOn={updateSortOn}\n        updateFilterOn={updateFilterOn}\n      />\n      <SortableTable settings={tableSchema} data={pageRecords} />\n    </Container>\n  );\n};\n\nRestaurants.defaultProps = {\n  city: \"\",\n  coordinates: {},\n  initialFilters: {}\n};\nRestaurants.propTypes = {\n  city: PropTypes.string,\n  coordinates: PropTypes.shape({\n    latitude: PropTypes.number.isRequired,\n    longitude: PropTypes.number.isRequired\n  }),\n  initialFilters: PropTypes.shape({\n    categories: PropTypes.array\n  }),\n  tableSchema: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    getBodyFormat: PropTypes.func.isRequired,\n    isKey: PropTypes.bool.isRequired,\n    dataSort: PropTypes.bool.isRequired,\n    sortFunc: PropTypes.func,\n    width: PropTypes.number\n  }).isRequired\n};\n\nexport default Restaurants;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container } from \"react-bootstrap\";\nimport { EVENT_SORTABLE_SCHEMA } from \"../lib/constants\";\nimport SortableTable from \"../components/sortable-table\";\nimport Toast from \"../components/toast\";\nimport TableActions from \"./table-actions\";\nimport useDataStore from \"../hooks/use-data-store\";\n\nconst Events = ({ city, coordinates, tableSchema }) => {\n  const [isError, setIsError] = useState(false);\n  const [sortOn, setSortOn] = useState({\n    sort: \"time_start\",\n    order: \"asc\"\n  });\n\n  const [\n    { recordsCount, fetching, pageRecords, currentPage },\n    { fetchPage, sort }\n  ] = useDataStore(() => {\n    const { sort, order } = sortOn;\n\n    if (city) {\n      return {\n        url: `/events/${city}`,\n        params: {\n          page: 1,\n          sort,\n          order\n        },\n        name: \"events\"\n      };\n    }\n    const { longitude, latitude } = coordinates;\n    return {\n      url: `/events`,\n      params: {\n        page: 1,\n        sort,\n        order,\n        longitude,\n        latitude\n      },\n      name: \"events\"\n    };\n  });\n\n  useEffect(() => {\n    fetchPage(1).catch(() => setIsError(true));\n    // only fetch once when mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const updateSortOn = useCallback(\n    newSortOn => {\n      setSortOn(newSortOn);\n      sort(newSortOn);\n    },\n    [sort]\n  );\n\n  if (fetching) {\n    return <>Loading...</>;\n  }\n  if (isError) {\n    return <Toast />;\n  }\n  return (\n    <Container fluid>\n      <TableActions\n        totalRecords={recordsCount}\n        loadPage={fetchPage}\n        currentPage={currentPage}\n        sortSchema={EVENT_SORTABLE_SCHEMA}\n        sortOn={sortOn}\n        updateSortOn={updateSortOn}\n      />\n      <SortableTable settings={tableSchema} data={pageRecords} />\n    </Container>\n  );\n};\nEvents.defaultProps = {\n  city: \"\",\n  coordinates: {}\n};\nEvents.propTypes = {\n  city: PropTypes.string,\n  coordinates: PropTypes.shape({\n    latitude: PropTypes.number.isRequired,\n    longitude: PropTypes.number.isRequired\n  }),\n  tableSchema: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    getBodyFormat: PropTypes.func.isRequired,\n    isKey: PropTypes.bool.isRequired,\n    dataSort: PropTypes.bool.isRequired,\n    sortFunc: PropTypes.func,\n    width: PropTypes.number\n  }).isRequired\n};\n\nexport default Events;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container } from \"react-bootstrap\";\nimport { AIRBNB_SCHEMA, AIRBNB_SORTABLE_SCHEMA } from \"../lib/constants\";\nimport SortableTable from \"../components/sortable-table\";\nimport Toast from \"../components/toast\";\nimport TableActions from \"./table-actions\";\nimport useDataStore from \"../hooks/use-data-store\";\n\nconst Airbnbs = ({ city, coordinates }) => {\n  const [isError, setIsError] = useState(false);\n  const [sortOn, setSortOn] = useState({\n    sort: \"price\",\n    order: \"asc\"\n  });\n\n  const [\n    { recordsCount, fetching, pageRecords, currentPage },\n    { fetchPage, sort }\n  ] = useDataStore(() => {\n    const { sort, order } = sortOn;\n    return {\n      url: `/airbnbs/${city}`,\n      params: {\n        page: 1,\n        sort,\n        order\n      },\n      name: \"airbnbs\"\n    };\n  });\n\n  useEffect(() => {\n    fetchPage(1).catch(() => setIsError(true));\n    // only fetch once when mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const updateSortOn = useCallback(\n    newSortOn => {\n      setSortOn(newSortOn);\n      sort(newSortOn);\n    },\n    [sort]\n  );\n\n  if (fetching) {\n    return <></>;\n  }\n  if (isError) {\n    return <Toast />;\n  }\n  return (\n    <Container fluid>\n      <TableActions\n        totalRecords={recordsCount}\n        loadPage={fetchPage}\n        currentPage={currentPage}\n        sortSchema={AIRBNB_SORTABLE_SCHEMA}\n        sortOn={sortOn}\n        updateSortOn={updateSortOn}\n      />\n      <SortableTable settings={AIRBNB_SCHEMA} data={pageRecords} />\n    </Container>\n  );\n};\nAirbnbs.defaultProps = {\n  city: \"\",\n  coordinates: {}\n};\nAirbnbs.propTypes = {\n  city: PropTypes.string,\n  coordinates: PropTypes.shape({\n    latitude: PropTypes.number.isRequired,\n    longitude: PropTypes.number.isRequired\n  })\n};\n\nexport default Airbnbs;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Table from \"react-bootstrap/Table\";\nimport apiFetch from \"../lib/api-fetch\";\nimport Restaurants from \"../containers/restaurants\";\nimport Events from \"../containers/events\";\nimport Airbnbs from \"../containers/airbnbs\";\nimport { RESTAURANT_SCHEMA, EVENT_SCHEMA } from \"../lib/constants\";\n\nconst TABS = {\n  restaurants: {\n    key: \"restaurants\",\n    title: \"Restaurants\"\n  },\n  airbnbs: {\n    key: \"airbnbs\",\n    title: \"Airbnbs\"\n  },\n  events: {\n    key: \"events\",\n    title: \"Events\"\n  }\n};\n\nconst City = () => {\n  const { id } = useParams();\n\n  const [city, setCity] = useState(null);\n  const [image, setImage] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n\n  // TODO: data should be passed down from parent\n  useEffect(() => {\n    apiFetch(`/city/${id}`, {})\n      .then(data => {\n        setCity(data.city);\n      })\n      .catch(() => {\n        setIsError(true);\n      });\n  }, [id]);\n\n  useEffect(() => {\n    // TODO: fix getting image when slug has a space\n    fetch(`https://api.teleport.org/api/urban_areas/slug:${id}/images/`)\n      .then(resp => resp.json())\n      .then(data => {\n        try {\n          setImage(data.photos[0].image.web);\n        } catch (error) {\n          console.error(\"No image available\");\n        }\n      });\n  }, []);\n\n  if (city) {\n    const { state, latitude, longitude, population, description, name } = city;\n    return (\n      <>\n        <div className=\"header-image-container\">\n          <img src={image} alt={name} />\n        </div>\n        <h1>\n          {name}, {state}{\" \"}\n        </h1>\n\n        {/* TODO: extract this component */}\n        <div className=\"des-sec-container\">\n          <h2>Description</h2>\n          <p> {description} </p>\n        </div>\n\n        <div className=\"stat-container\">\n          <h2>Statistics</h2>\n          <div className=\"stat-table\">\n            <Table>\n              <tr>\n                <th>Population</th>\n                <th>Longitude</th>\n                <th>Latitude</th>\n              </tr>\n              <tr>\n                <td>{population}</td>\n                <td>{longitude}</td>\n                <td>{latitude}</td>\n              </tr>\n            </Table>\n          </div>\n        </div>\n\n        <Tabs defaultActiveKey={TABS.restaurants.key}>\n          <Tab eventKey={TABS.restaurants.key} title={TABS.restaurants.title}>\n            <Restaurants city={id} tableSchema={RESTAURANT_SCHEMA} />\n          </Tab>\n\n          <Tab eventKey={TABS.events.key} title={TABS.events.title}>\n            <Events city={id} tableSchema={EVENT_SCHEMA} />\n          </Tab>\n\n          <Tab eventKey={TABS.airbnbs.key} title={TABS.airbnbs.title}>\n            <Airbnbs city={name} />\n          </Tab>\n        </Tabs>\n      </>\n    );\n  }\n\n  return <> </>;\n};\n\nexport default City;\n","import React, { useContext } from \"react\";\nimport Restaurants from \"../containers/restaurants\";\nimport { CityHuntContext } from \"../App\";\nimport { RESTAURANTS_PAGE_SCHEMA } from \"../lib/constants\";\n\nconst RestaurantsPage = () => {\n  const { coordinates } = useContext(CityHuntContext);\n  return (\n    <>\n      <h1>Restaurants</h1>\n      {coordinates ? (\n        <Restaurants\n          tableSchema={RESTAURANTS_PAGE_SCHEMA}\n          coordinates={coordinates}\n        />\n      ) : (\n        <></>\n        // <Restaurants tableSchema={RESTAURANTS_PAGE_SCHEMA} city=\"austin\" />\n      )}\n    </>\n  );\n};\n\nexport default RestaurantsPage;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Tabs, Tab, Badge, Card } from \"react-bootstrap\";\nimport apiFetch from \"../lib/api-fetch\";\nimport Restaurants from \"../containers/restaurants\";\nimport Events from \"../containers/events\";\nimport Airbnbs from \"../containers/airbnbs\";\nimport { RESTAURANT_SCHEMA, EVENT_SCHEMA } from \"../lib/constants\";\nimport {\n  getGoogleMapLinkByCoordinates,\n  getWeekDay,\n  getHours\n} from \"../lib/util\";\n\nconst TABS = {\n  restaurants: {\n    key: \"restaurants\",\n    title: \"Similar Restaurants Nearby\"\n  },\n  airbnbs: {\n    key: \"airbnbs\",\n    title: \"Nearby Airbnbs\"\n  },\n  events: {\n    key: \"events\",\n    title: \"Nearby Events\"\n  }\n};\n\nconst getOpenHours = hours => (\n  <div>\n    {hours[0].open.map(({ day, start, end }) => (\n      <p key={day}>\n        {getWeekDay(day)}: {getHours(start)} - {getHours(end)}\n      </p>\n    ))}\n  </div>\n);\n\nconst Restaurant = () => {\n  const { id } = useParams();\n  const [restaurant, setRestaurant] = useState(null);\n\n  useEffect(() => {\n    apiFetch(`/restaurant/${id}`, {}).then(data => {\n      setRestaurant(data.response);\n    });\n  }, [id]);\n\n  if (!restaurant) {\n    return <></>;\n  }\n\n  const {\n    name,\n    categories,\n    url,\n    hours,\n    location: { display_address: address, city },\n    image_url: image,\n    coordinates: { latitude, longitude },\n    price\n  } = restaurant;\n\n  return (\n    <>\n      <div className=\"header-image-container\">\n        <img src={image} alt={name} />\n      </div>\n      <h1>{name}</h1>\n      <div className=\"text-center\">\n        {categories.map(({ title }) => (\n          <Badge pill variant=\"info\" key={title}>\n            #{title}{\" \"}\n          </Badge>\n        ))}\n      </div>\n\n      <h2>Location & Hours</h2>\n      <p>\n        <a\n          href={getGoogleMapLinkByCoordinates(latitude, longitude)}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Map\n        </a>\n      </p>\n      <p>{address.join(\", \")}</p>\n      {getOpenHours(hours)}\n\n      <p>Price {price}</p>\n      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n        Restaurant Website\n      </a>\n\n      <Tabs defaultActiveKey={TABS.restaurants.key}>\n        <Tab eventKey={TABS.restaurants.key} title={TABS.restaurants.title}>\n          <Restaurants\n            initialFilters={{ category: categories }}\n            coordinates={{ longitude, latitude }}\n            tableSchema={RESTAURANT_SCHEMA}\n          />\n        </Tab>\n\n        <Tab eventKey={TABS.events.key} title={TABS.events.title}>\n          <Events\n            coordinates={{ longitude, latitude }}\n            tableSchema={EVENT_SCHEMA}\n          />\n        </Tab>\n        <Tab eventKey={TABS.airbnbs.key} title={TABS.airbnbs.title}>\n          <Airbnbs city={city} />\n        </Tab>\n      </Tabs>\n    </>\n  );\n};\n\nexport default Restaurant;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport \"./event.css\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport apiFetch from \"../lib/api-fetch\";\nimport Events from \"../containers/events\";\nimport Restaurants from \"../containers/restaurants\";\nimport Airbnbs from \"../containers/airbnbs\";\nimport { getCityIdByName } from \"../lib/util\";\nimport {\n  EVENT_SCHEMA,\n  RESTAURANT_SCHEMA,\n  AIRBNB_SCHEMA\n} from \"../lib/constants\";\n\nconst TABS = {\n  events: {\n    key: \"events\",\n    title: \"Nearby Events\"\n  },\n  restaurants: {\n    key: \"restaurants\",\n    title: \"Nearby Restaurants\"\n  },\n  airbnbs: {\n    key: \"airbnbs\",\n    title: \"Nearby Airbnbs\"\n  }\n};\n\nconst Event = () => {\n  const { id } = useParams();\n  const [event, setEvent] = useState(null);\n\n  useEffect(() => {\n    apiFetch(`/event/${id}`, { useApi: true, json: true }).then(data => {\n      setEvent(data.response);\n    });\n  }, [id]);\n\n  if (!event) {\n    return <></>;\n  }\n\n  const {\n    name,\n    category,\n    categories,\n    location: { display_address: address, city },\n    image_url: image,\n    latitude,\n    longitude,\n    cost,\n    is_free: isFree,\n    event_site_url: url,\n    time_start: start,\n    time_end: end,\n    description\n  } = event;\n\n  return (\n    <>\n      <h1>{name}</h1>\n      <p>{description}</p>\n\n      <div className=\"event-info\">\n        <div className=\"event-image\">\n          <img src={image} alt={name} />\n        </div>\n        <div className=\"event-content\">\n          <p>\n            <span className=\"hashtag\">#{category}</span>\n          </p>\n          <p>\n            Event time: {new Date(start).toLocaleDateString()} -\n            {new Date(end).toLocaleDateString()}\n          </p>\n          <p>\n            Geolocation: ({latitude}, {longitude}){\" \"}\n          </p>\n          <p>\n            <a className=\"hyperlink\" href={url}>\n              Event Website\n            </a>\n          </p>\n          <p>Event Address: {address}</p>\n          <p>Cost of event: {cost}</p>\n          <p>\n            Learn more about {city}\n            <Link className=\"hyperlink\" to={`/city/${getCityIdByName(city)}`}>\n              here\n            </Link>\n          </p>\n        </div>\n      </div>\n\n      <Tabs defaultActiveKey={TABS.events.key}>\n        <Tab eventKey={TABS.events.key} title={TABS.events.title}>\n          <Events\n            coordinates={{ longitude, latitude }}\n            tableSchema={EVENT_SCHEMA}\n          />\n        </Tab>\n\n        <Tab eventKey={TABS.restaurants.key} title={TABS.restaurants.title}>\n          <Restaurants\n            initialFilters={{ category: categories }}\n            coordinates={{ longitude, latitude }}\n            tableSchema={RESTAURANT_SCHEMA}\n          />\n        </Tab>\n        <Tab eventKey={TABS.airbnbs.key} title={TABS.airbnbs.title}>\n          <Airbnbs city={city} tableSchema={AIRBNB_SCHEMA} />\n        </Tab>\n      </Tabs>\n    </>\n  );\n};\n\nexport default Event;\n","import React, { useContext } from \"react\";\nimport Events from \"../containers/events\";\nimport { CityHuntContext } from \"../App\";\nimport { EVENTS_PAGE_SCHEMA } from \"../lib/constants\";\n\nconst EventsPage = () => {\n  const { coordinates } = useContext(CityHuntContext);\n\n  return (\n    <>\n      <h1>Events</h1>\n      {coordinates ? (\n        <Events coordinates={coordinates} tableSchema={EVENTS_PAGE_SCHEMA} />\n      ) : (\n        <Events city=\"austin\" tableSchema={EVENTS_PAGE_SCHEMA} />\n      )}\n    </>\n  );\n};\n\nexport default EventsPage;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useLocation\n} from \"react-router-dom\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nimport Home from \"../page/home\";\nimport NotFound from \"../page/not-found\";\nimport About from \"../page/about\";\nimport Cities from \"../page/cities\";\nimport City from \"../page/city\";\nimport Restaurants from \"../page/restaurants\";\nimport Restaurant from \"../page/restaurant\";\nimport Event from \"../page/event\";\nimport Events from \"../page/events\";\n\nconst AppNavBar = () => {\n  const location = useLocation();\n\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <Nav className=\"mr-auto\" defaultActiveKey={location.pathname}>\n        <Nav.Link eventKey=\"/\" as={Link} to=\"/\">\n          Home\n        </Nav.Link>\n        <Nav.Link eventKey=\"/about\" as={Link} to=\"/about\">\n          About\n        </Nav.Link>\n        <Nav.Link eventKey=\"/cities\" as={Link} to=\"/cities\">\n          Cities\n        </Nav.Link>\n        <Nav.Link eventKey=\"/restaurants\" as={Link} to=\"/restaurants\">\n          Restaurants\n        </Nav.Link>\n        <Nav.Link eventKey=\"/events\" as={Link} to=\"/events\">\n          Events\n        </Nav.Link>\n      </Nav>\n    </Navbar>\n  );\n};\n\nconst Navigation = () => (\n  <Router>\n    <AppNavBar />\n    <Switch>\n      <Route path=\"/about\">\n        <About />\n      </Route>\n      <Route path=\"/cities\">\n        <Cities />\n      </Route>\n      <Route path=\"/city/:id\">\n        <City />\n      </Route>\n      <Route path=\"/restaurant/:id\">\n        <Restaurant />\n      </Route>\n      <Route path=\"/restaurants/\">\n        <Restaurants />\n      </Route>\n      <Route path=\"/events/\">\n        <Events />\n      </Route>\n      <Route path=\"/event/:id\">\n        <Event />\n      </Route>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route>\n        <NotFound />\n      </Route>\n    </Switch>\n  </Router>\n);\n\nexport default Navigation;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Navigation from \"./components/navigation\";\nimport { setLocation } from \"./lib/util\";\n\nexport const CityHuntContext = React.createContext({});\nfunction App() {\n  const [coordinates, setCoordinates] = useState(null);\n\n  useEffect(() => {\n    setLocation(setCoordinates);\n  }, []);\n  return (\n    <CityHuntContext.Provider value={{ coordinates }}>\n      <div className=\"App\">\n        <Navigation />\n      </div>\n    </CityHuntContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/marshall_portrait.f95b93b1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/yulissa_portrait.c533ec7e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/quinton_portrait.397de1da.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nathan_portrait.6df7bf3d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/xindi_portrait.d96c6ee7.jpg\";"],"sourceRoot":""}