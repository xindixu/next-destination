{"version":3,"sources":["lib/api-fetch.js","page/home.jsx","page/not-found.jsx","page/about.jsx","lib/util.js","lib/constants.jsx","components/sortable-table.jsx","components/toast.jsx","components/pagination.jsx","components/sort-on.jsx","components/tag-input.jsx","components/filter-on.jsx","containers/table-actions.jsx","hooks/use-data-store.js","containers/cities.jsx","page/cities.jsx","containers/restaurants.jsx","containers/events.jsx","containers/airbnbs.jsx","components/tabs.jsx","page/city.jsx","page/restaurants.jsx","page/restaurant.jsx","page/event.jsx","page/events.jsx","page/search.jsx","components/navigation.jsx","App.jsx","serviceWorker.js","index.js","assets/marshall_portrait.jpg","assets/yulissa_portrait.jpg","assets/quinton_portrait.jpg","assets/nathan_portrait.jpg","assets/xindi_portrait.jpg"],"names":["base","apiFetch","url","method","useApi","json","fetch","mode","cache","headers","redirect","referrerPolicy","then","response","Home","id","useParams","useState","city","setCity","image","setIsError","useEffect","data","catch","console","log","state","population","latitude","longitude","description","name","className","Container","Row","Col","src","alt","NotFound","to","photos","marshall","marshallPhoto","yulissa","yulissaPhoto","quinton","quintonPhoto","nathan","nathanPhoto","xindi","xindiPhoto","UnitTestResult","results","totalTime","spentMilliseconds","Table","triped","bordered","hover","variant","map","type","About","people","setPeople","unitTestResult","setUnitTestResult","about","runTests","useCallback","onClick","href","target","rel","length","responsibilities","stats","commits","issues","key","xs","sm","md","lg","Card","Img","Body","Title","Text","Spinner","animation","getCityIdByName","cityName","toLowerCase","replace","getGoogleMapLinkByCoordinates","getHours","time","hour","substring","minute","getUrl","params","query","qs","stringify","arrayFormat","indexOf","RESTAURANT_SORTABLE_SCHEMA","best_match","title","dataSort","rating","review_count","distance","EVENT_SORTABLE_SCHEMA","popularity","time_start","AIRBNB_SORTABLE_SCHEMA","price","accomodates","AIRBNB_SCHEMA","getBodyFormat","_","img","picture_url","isKey","listing_url","review_score","review_scores_rating","number_of_reviews","zipcode","neighborhood_overview","RESTAURANT_SCHEMA","image_url","alias","Number","toFixed","location","address","display_address","join","categories","category","reviews","RESTAURANTS_PAGE_SCHEMA","EVENT_SCHEMA","interested_count","count","is_free","isFree","start","end","time_end","Date","toLocaleDateString","event_site_url","EVENTS_PAGE_SCHEMA","CITY_SCHEMA","ORDER_SCHEMA","TABS","SEARCH_ON","restaurants","events","cities","CATEGORIES","SortableTable","settings","options","noDataText","role","version","tableStyle","marginBottom","striped","tableBodyClass","tableHeaderClass","Object","keys","sortFunc","width","dataField","dataFormat","row","ToastNote","message","showA","setShowA","Toast","show","onClose","style","margin","Header","color","Pagination","totalRecords","loadPage","currentPage","totalPages","Math","min","floor","paginationButtons","startsAt","Array","getButtons","goToPage","num","First","disabled","Prev","Ellipsis","Item","active","Next","Last","SortOn","sortOn","updateSortOn","sortableAttributes","schema","reduce","dict","getSortableAttributes","sort","order","DropdownButton","as","ButtonGroup","alignRight","Dropdown","eventKey","find","TagInput","handleChange","tags","setState","this","props","getAllSuggestions","submit","renderInput","addTag","value","ref","onChange","inputValue","trim","inputLength","suggestions","filter","suggestion","slice","shouldRenderSuggestions","item","getSuggestionValue","renderSuggestion","inputProps","e","newValue","preventDefault","onSuggestionSelected","onSuggestionsClearRequested","onSuggestionsFetchRequested","Button","React","Component","FilterOn","filterSchema","filterOn","updateFilterOn","categorySchema","includes","defaultProps","TableActions","sortSchema","aria-label","useDataStore","init","initialParams","option","recordsByPage","setRecordsByPage","recordsCount","setRecordsCount","setCurrentPage","setParams","fetching","setFetching","setError","complete","setComplete","reset","onFetchSuccess","page","total","onFetchFail","err","fetchWithUrl","urlToFetch","fetchPage","newParams","newURL","resp","pageRecords","Cities","isError","setSortOn","newSortOn","fluid","CitiesPage","getCategory","filters","categoryAlias","Restaurants","coordinates","initialFilters","tableSchema","setFilterOn","initialSortOn","initDataStore","newFilterOn","Events","Airbnbs","setShowAirbnbs","setActiveTab","Tabs","tabs","useLocation","history","useHistory","validTabs","defaultTab","tabFromUrl","hash","activeTab","activeKey","onSelect","newTab","content","City","setImage","showAirbnbs","web","error","eventProps","restaurantProps","airbnbProps","push","RestaurantsPage","useContext","CityHuntContext","Restaurant","restaurant","setRestaurant","hours","Badge","pill","open","day","getOpenHours","Event","event","setEvent","cost","EventsPage","processResults","restaurantsResults","businesses","eventsResults","citiesResults","Search","setQuery","lastUrl","setLastUrl","memo","modelToSearch","setModelToSearch","setRestaurants","setEvents","setCities","setDataFromResponse","override","onSubmit","searchOn","q","on","getOffset","fetchMore","offset","Form","inline","FormControl","placeholder","onKeyDown","which","Toggle","Menu","values","Check","custom","label","checked","Tab","AppNavBar","Navbar","bg","Nav","defaultActiveKey","pathname","Link","Navigation","path","exact","createContext","App","setCoordinates","callback","navigator","geolocation","getCurrentPosition","coords","Provider","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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CPzB,MAAO,aAET,CACEyB,MAAO,UACPzB,MAAO,WAET,CACEyB,MAAO,UACPzB,MAAO,WAET,CACEyB,MAAO,QACPzB,MAAO,SAET,CACEyB,MAAO,YACPzB,MAAO,aAET,CACEyB,MAAO,QACPzB,MAAO,gBAET,CACEyB,MAAO,YACPzB,MAAO,aAET,CACEyB,MAAO,YACPzB,MAAO,aAET,CACEyB,MAAO,UACPzB,MAAO,WAET,CACEyB,MAAO,eACPzB,MAAO,gBAET,CACEyB,MAAO,gBACPzB,MAAO,iBAET,CACEyB,MAAO,cACPzB,MAAO,gBAET,CACEyB,MAAO,UACPzB,MAAO,WAET,CACEyB,MAAO,cACPzB,MAAO,gBAET,CACEyB,MAAO,YACPzB,MAAO,aAET,CACEyB,MAAO,QACPzB,MAAO,SAET,CACEyB,MAAO,QACPzB,MAAO,SAET,CACEyB,MAAO,QACPzB,MAAO,SAET,CACEyB,MAAO,SACPzB,MAAO,UAET,CACEyB,MAAO,gBACPzB,MAAO,kBAET,CACEyB,MAAO,WACPzB,MAAO,YAET,CACEyB,MAAO,YACPzB,MAAO,aAET,CACEyB,MAAO,WACPzB,MAAO,YAET,CACEyB,MAAO,aACPzB,MAAO,gBAET,CACEyB,MAAO,SACPzB,MAAO,UAET,CACEyB,MAAO,aACPzB,MAAO,cAET,CACEyB,MAAO,aACPzB,MAAO,eAET,CACEyB,MAAO,SACPzB,MAAO,UAET,CACEyB,MAAO,WACPzB,MAAO,aAET,CACEyB,MAAO,aACPzB,MAAO,cAET,CACEyB,MAAO,WACPzB,MAAO,YAET,CACEyB,MAAO,SACPzB,MAAO,UAET,CACEyB,MAAO,cACPzB,MAAO,eAET,CACEyB,MAAO,QACPzB,MAAO,SAET,CACEyB,MAAO,YACPzB,MAAO,aAET,CACEyB,MAAO,QACPzB,MAAO,SAET,CACEyB,MAAO,WACPzB,MAAO,YAET,CACEyB,MAAO,YACPzB,MAAO,sBAET,CACEyB,MAAO,SACPzB,MAAO,wBAET,CACEyB,MAAO,WACPzB,MAAO,YAET,CACEyB,MAAO,SACPzB,MAAO,YAET,CACEyB,MAAO,UACPzB,MAAO,aAET,CACEyB,MAAO,SACPzB,MAAO,WAET,CACEyB,MAAO,YACPzB,MAAO,aAET,CACEyB,MAAO,UACPzB,MAAO,WAET,CACEyB,MAAO,aACPzB,MAAO,cAET,CACEyB,MAAO,SACPzB,MAAO,UAET,CACEyB,MAAO,QACPzB,MAAO,SAET,CACEyB,MAAO,UACPzB,MAAO,WAET,CACEyB,MAAO,WACPzB,MAAO,YAET,CACEyB,MAAO,QACPzB,MAAO,SAET,CACEyB,MAAO,SACPzB,MAAO,UAET,CACEyB,MAAO,SACPzB,MAAO,UAET,CACEyB,MAAO,UACPzB,MAAO,WAET,CACEyB,MAAO,QACPzB,MAAO,kBAET,CACEyB,MAAO,YACPzB,MAAO,aAET,CACEyB,MAAO,gBACPzB,MAAO,iBAET,CACEyB,MAAO,UACPzB,MAAO,WAET,CACEyB,MAAO,aACPzB,MAAO,kBAET,CACEyB,MAAO,kBACPzB,MAAO,mBAET,CACEyB,MAAO,YACPzB,MAAO,aAET,CACEyB,MAAO,WACPzB,MAAO,YAET,CACEyB,MAAO,cACPzB,MAAO,kBAET,CACEyB,MAAO,aACPzB,MAAO,uBAET,CACEyB,MAAO,aACPzB,MAAO,cAET,CACEyB,MAAO,UACPzB,MAAO,WAET,CACEyB,MAAO,YACPzB,MAAO,aAET,CACEyB,MAAO,WACPzB,MAAO,aAET,CACEyB,MAAO,UACPzB,MAAO,mBAET,CACEyB,MAAO,WACPzB,MAAO,YAET,CACEyB,MAAO,QACPzB,MAAO,SAET,CACEyB,MAAO,SACPzB,MAAO,UAET,CACEyB,MAAO,aACPzB,MAAO,cAET,CACEyB,MAAO,mBACPzB,MAAO,sBAET,CACEyB,MAAO,aACPzB,MAAO,cAET,CACEyB,MAAO,cACPzB,MAAO,eAET,CACEyB,MAAO,WACPzB,MAAO,iBAET,CACEyB,MAAO,UACPzB,MAAO,WAET,CACEyB,MAAO,QACPzB,MAAO,SAET,CACEyB,MAAO,aACPzB,MAAO,cAET,CACEyB,MAAO,eACPzB,MAAO,gBAET,CACEyB,MAAO,WACPzB,MAAO,YAET,CACEyB,MAAO,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","file":"static/js/main.77a9a816.chunk.js","sourcesContent":["const domain = \"https://city-hunt-267820.appspot.com\";\nconst heroku = \"https://hunt-for-next-destination.herokuapp.com/\";\nconst local = \"http://127.0.0.1:5000\";\nconst base = `${heroku}/api`;\n\nconst apiFetch = (url, { method = \"GET\", useApi = true, json = true }) =>\n  fetch(`${useApi ? base : \"\"}${url}`, {\n    method,\n    mode: \"cors\",\n    cache: \"no-cache\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\"\n    },\n    redirect: \"follow\", // manual, *follow, error\n    referrerPolicy: \"no-referrer\" // no-referrer, *client\n  }).then(response => (json ? response.json() : response));\n\nexport default apiFetch;\n","import React, { useEffect, useState } from \"react\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport \"./home.css\";\nimport apiFetch from \"../lib/api-fetch\";\nimport { useParams } from \"react-router-dom\";\n\n\nconst Home = () => {\n  const { id } = useParams();\n  const [city, setCity] = useState(null);\n  const [image, setImage] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n  \n  useEffect(() => {\n    apiFetch(`/city/random`, {})\n      .then(data => {\n        \n        setCity(data.city);\n        const t_id = city['id'];\n      })\n      .catch(() => {\n        \n        setIsError(true);\n      });\n  }, [id]);\n  console.log(city);\n  \n  // useEffect(() => {\n  //   fetch(`https://api.teleport.org/api/urban_areas/slug:${t_id}/images/`)\n  //     .then(resp => resp.json())\n  //     .then(data => {\n  //       try {\n  //         setImage(data.photos[0].image.web);\n  //       } catch (error) {\n  //         console.error(\"No image available\");\n  //       }\n  //     });\n  // }, []);\n  \n  console.log({image});\n  if (city) {\n    const { state, latitude, longitude, population, description, name } = city;\n    return (\n      <div id=\"home\">\n        <div className=\"title\">\n          <h1>City Hunt</h1>\n            <p className=\"description\">\n              Discover something new!\n              Make your dream vacation happen.. City Hunt is a centralized application designed to simplify travel arrangements.\n              Try our random city generator to start discovering new places!\n            </p>\n        </div>\n        <div className=\"bottom-text-container\">\n          <Container className=\"Container\">\n            <Row>\n              <Col className=\"text\">\n                <img src={image} alt={name}></img>\n                <p className=\"city-name\">{name}, {state}</p>\n                <p> Population: {population}</p>\n                <p> Description: {description}</p>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </div>\n    );\n  };\n  return <>\n    <div id=\"home\">\n        <div className=\"title\">\n          <h1>City Hunt</h1>\n            <p className=\"description\">\n              Discover something new!\n              Make your dream vacation happen.. City Hunt is a centralized application designed to simplify travel arrangements.\n              Try our random city generator to start discovering new places!\n            </p>\n        </div>\n        <div className=\"bottom-text-container\">\n          <Container className=\"Container\">\n            <Row>\n              <Col className=\"text\">\n                \n                <p className=\"city-name\">Nowhere</p>\n                <p> Population: 0</p>\n                <p> Description: This city is in the middle of nowhere.</p>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </div>\n  </>;\n};\n\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NotFound = () => (\n  <div className=\"text-center\">\n    <h1>\n      We looked everywhere but couldn&apos;t find what you are looking for.\n    </h1>\n    <Link className=\"btn btn-primary \" to=\"/\">\n      Back to home\n    </Link>\n  </div>\n);\n\nexport default NotFound;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport {\n  Table,\n  Spinner,\n  Card,\n  Container,\n  Col,\n  Row\n} from \"react-bootstrap\";\nimport apiFetch from \"../lib/api-fetch\";\nimport marshallPhoto from \"../assets/marshall_portrait.jpg\";\nimport yulissaPhoto from \"../assets/yulissa_portrait.jpg\";\nimport quintonPhoto from \"../assets/quinton_portrait.jpg\";\nimport nathanPhoto from \"../assets/nathan_portrait.jpg\";\nimport xindiPhoto from \"../assets/xindi_portrait.jpg\";\nimport \"./about.css\";\n\nconst photos = {\n  marshall: marshallPhoto,\n  yulissa: yulissaPhoto,\n  quinton: quintonPhoto,\n  nathan: nathanPhoto,\n  xindi: xindiPhoto\n};\n\nconst UnitTestResult = ({ response }) => {\n  const { results, spentMilliseconds: totalTime } = response;\n\n  return (\n    <>\n      <Table triped bordered hover variant=\"dark\">\n        <thead>\n          <tr>\n            <th>Statues</th>\n            <th>Description</th>\n            <th>Name</th>\n            <th>Time Spent (ms)</th>\n          </tr>\n        </thead>\n        <tbody>\n          {results.map(({ type, description, name, spentMilliseconds }) => (\n            <tr>\n              <td>{type}</td>\n              <td>{description}</td>\n              <td>{name}</td>\n              <td>{spentMilliseconds}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <p>Total time spent: {totalTime}</p>\n    </>\n  );\n};\n\nconst About = () => {\n  const [people, setPeople] = useState([]);\n  const [unitTestResult, setUnitTestResult] = useState(\"\");\n  useEffect(() => {\n    apiFetch(\"/about\", { json: true, useApi: true }).then(data =>\n      setPeople(data.about)\n    );\n  }, []);\n\n  const runTests = useCallback(() => {\n    apiFetch(\"/unittests\", { json: true }).then(setUnitTestResult);\n  }, []);\n\n  return (\n    <div className=\"about\">\n      <Container>\n        <h1>About Us</h1>\n        <h2>Run unit tests</h2>\n        <button\n          onClick={runTests}\n          type=\"button\"\n          className=\"btn btn-outline-primary w-100 mb-lg-3\"\n        >\n          Run Unit tests\n        </button>\n        {unitTestResult && <UnitTestResult response={unitTestResult} />}\n\n        <h2>The Project</h2>\n        <div className=\"flex-links\">\n          <p>\n            This project connects travellers to cities, food, and events!\n          </p>\n          <h3>Links about our project</h3>\n          <ul>\n            <li>\n              <a\n                href=\"https://gitlab.com/nmcraig/cs-331e/issues\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Our Issue Tracker\n              </a>\n            </li>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://gitlab.com/nmcraig/cs-331e/\"\n              >\n                Our Repo\n              </a>\n            </li>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://gitlab.com/nmcraig/cs-331e/-/wikis/Phase-1-Development\"\n              >\n                Our report for phase 1 Development\n              </a>\n            </li>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://gitlab.com/nmcraig/cs-331e/-/wikis/Phase-2-Development\"\n              >\n                Our report for phase 2 Development\n              </a>\n            </li>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://gitlab.com/nmcraig/cs-331e/-/wikis/Phase-3-Development\"\n              >\n                Our report for phase 3 Development\n              </a>\n            </li>\n            <li> \n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://gitlab.com/nmcraig/cs-331e/-/wikis/Technical-Report\"\n              >\n                The overall technical report\n              </a>\n            </li>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://gitlab.com/nmcraig/cs-331e/-/wikis/User-Stories\"\n              >\n                User Stories\n              </a>\n            </li>\n          </ul>\n\n          <h3>Links about Data</h3>\n          <ul>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"http://developers.teleport.org/api/getting_started/#search_name\"\n              >\n                City Searching Feature and Photo Database\n              </a>\n            </li>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://www.mediawiki.org/wiki/API:Main_page\"\n              >\n                Information about Cities\n              </a>\n            </li>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"http://insideairbnb.com/get-the-data.html\"\n              >\n                Airbnb Data for Different Cities\n              </a>\n            </li>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://www.yelp.com/developers/documentation/v3deairbnb.com/get-the-data.html\"\n              >\n                Yelp Data for Restaurants\n              </a>\n            </li>\n          </ul>\n\n          <h3>Links about Tools</h3>\n          <ul>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://reactjs.org/\"\n              >\n                Frontend - React.js\n              </a>\n            </li>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://palletsprojects.com/p/flask/\"\n              >\n                Backend - Flask\n              </a>\n            </li>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://react-bootstrap.netlify.com/\"\n              >\n                CSS - React-Bootstrap - a bootstrap library for react\n              </a>\n            </li>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://slack.com/\"\n              >\n                Communication and gitlab integration done with Slack\n              </a>\n            </li>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://cloud.google.com/\"\n              >\n                Deployment through Google Cloud Platform\n              </a>\n            </li>\n          </ul>\n          <li>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://www.planitpoker.com/ \"\n              >\n                Agile Estimation Tool\n              </a>\n            </li>\n        </div>\n\n        <h2>The Team</h2>\n        <Row>\n          {people.length ? (\n            people.map(\n              ({\n                name,\n                responsibilities,\n                stats: { commits, issues },\n                description,\n                id\n              }) => (\n                <Col key={name} xs={12} sm={12} md={6} lg={4} className=\"mb-4\">\n                  <Card>\n                    <Card.Img variant=\"top\" src={photos[id]} alt={name} />\n                    <Card.Body>\n                      <Card.Title>{name}</Card.Title>\n                      <Card.Text>Skills: {responsibilities}</Card.Text>\n                      <Card.Text>Description: {description}</Card.Text>\n                      <Card.Text>Commits: {commits} </Card.Text>\n                      <Card.Text>Issues: {issues} </Card.Text>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              )\n            )\n          ) : (\n            <div className=\"w-100 d-flex justify-content-center\">\n              <Spinner animation=\"border\" variant=\"info\" />\n            </div>\n          )}\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default About;\n","import qs from \"qs\";\n\nexport const filterCities = (venueCity, cities) =>\n  cities.filter(city => city.name === venueCity);\n\nexport const filterArtists = (venueArtist, artists) =>\n  artists.filter(artist => artist.name === venueArtist);\n\nexport const filterVenues = (artistVenue, venues) =>\n  venues.filter(venue => venue.name === artistVenue);\n\nexport const filterVenuesByCities = (city, venues) =>\n  venues.filter(venue => venue.city === city);\n\nexport const getSortableAttributes = schema =>\n  Object.keys(schema).reduce((dict, key) => {\n    if (schema[key].dataSort) {\n      dict[key] = schema[key];\n    }\n    return dict;\n  }, {});\n\nexport const setLocation = callback => {\n  if (navigator.geolocation) {\n    return navigator.geolocation.getCurrentPosition(\n      ({ coords }) => callback(coords),\n      () => {\n        callback(null);\n        console.error(\"unable to get current location\");\n      }\n    );\n  }\n  return \"Geolocation is not supported by this browser.\";\n};\n\nexport const getCityIdByName = cityName =>\n  cityName.toLowerCase().replace(\" \", \"-\");\n\nexport const getGoogleMapLinkByCoordinates = (latitude, longitude) =>\n  `http://www.google.com/maps/place/${latitude},${longitude}`;\n\nexport const getWeekDay = num => {\n  const days = [\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n    \"Sunday\"\n  ];\n  return days[num];\n};\n\nexport const getHours = time => {\n  const hour = time.substring(0, 2);\n  const minute = time.substring(2);\n  return `${hour}:${minute}`;\n};\n\nexport const getUrl = (url, params) => {\n  const query = qs.stringify(params, { arrayFormat: \"repeat\" });\n  if (query) {\n    return url.indexOf(\"?\") ? `${url}?${query}` : `${url}&${query}`;\n  }\n  return url;\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getCityIdByName, getGoogleMapLinkByCoordinates } from \"./util\";\n\nexport const MAX_PAGE_NUM = 50;\nexport const LIMIT = 20;\n\n// schema for apiSorting\nexport const RESTAURANT_SORTABLE_SCHEMA = {\n  best_match: { title: \"Best Match\", dataSort: true },\n  rating: { title: \"Rating\", dataSort: true },\n  review_count: { title: \"Review Count\", dataSort: true },\n  distance: { title: \"Distance\", dataSort: true }\n};\n\nexport const EVENT_SORTABLE_SCHEMA = {\n  popularity: { title: \"Popularity\", dataSort: true },\n  time_start: { title: \"Time Start\", dataSort: true }\n};\n\nexport const AIRBNB_SORTABLE_SCHEMA = {\n  price: { title: \"Price\", dataSort: true },\n  accomodates: { title: \"Accomodates\", dataSort: true }\n};\n\n// schema for sortableTable\nexport const AIRBNB_SCHEMA = {\n  image: {\n    title: \"\",\n    getBodyFormat: (_, { picture_url: img, name }) => (\n      <img src={img} alt={name} />\n    ),\n    isKey: false,\n    dataSort: false\n  },\n  name: {\n    title: \"Name\",\n    getBodyFormat: (_, { listing_url, name }) => (\n      <a href={listing_url} target=\"_blank\" rel=\"noopener noreferrer\">\n        {name}\n      </a>\n    ),\n    isKey: true,\n    dataSort: true\n  },\n  price: {\n    title: \"Price per night\",\n    getBodyFormat: (_, { price }) => <span>${price}</span>,\n    isKey: false,\n    dataSort: true\n  },\n  accomodates: {\n    title: \"Accomodates\",\n    getBodyFormat: (_, { accomodates }) => <span>{accomodates}</span>,\n    isKey: false,\n    dataSort: true\n  },\n  review_score: {\n    title: \"Rating out of 100\",\n    getBodyFormat: (_, { review_scores_rating }) => (\n      <span>{review_scores_rating}</span>\n    ),\n    isKey: false,\n    dataSort: true\n  },\n  number_of_reviews: {\n    title: \"# of Reviews\",\n    getBodyFormat: (_, { number_of_reviews }) => (\n      <span>{number_of_reviews}</span>\n    ),\n    isKey: false,\n    dataSort: true\n  },\n  zipcode: {\n    title: \"Zipcode\",\n    getBodyFormat: (_, { zipcode }) => <span>{zipcode}</span>,\n    isKey: false,\n    dataSort: true\n  },\n  description: {\n    title: \"Description\",\n    getBodyFormat: (_, { neighborhood_overview, listing_url }) => (\n      <span>\n        {`${neighborhood_overview.substring(0, 200)} ...`}\n        <a href={listing_url} target=\"_blank\" rel=\"noopener noreferrer\">\n          READ MORE\n        </a>\n      </span>\n    ),\n    isKey: false,\n    dataSort: true\n  }\n};\n\nexport const RESTAURANT_SCHEMA = {\n  image: {\n    title: \"\",\n    getBodyFormat: (_, { image_url: img, name }) => (\n      <img src={img} alt={name} />\n    ),\n    isKey: false,\n    dataSort: false\n  },\n  name: {\n    title: \"Restaurants\",\n    getBodyFormat: (_, { alias, name }) => (\n      <Link to={`/restaurant/${alias}`}>{name}</Link>\n    ),\n    isKey: true,\n    dataSort: true\n  },\n  distance: {\n    title: \"Distance\",\n    getBodyFormat: (_, { distance }) => (\n      <span>{Number(distance).toFixed(2)} yd.</span>\n    ),\n    isKey: false,\n    dataSort: true\n  },\n  location: {\n    title: \"Address\",\n    getBodyFormat: (_, { location: { display_address: address } }) => (\n      <span>{address.join(\", \")}</span>\n    ),\n    isKey: false,\n    dataSort: false\n  },\n  categories: {\n    title: \"Categories\",\n    getBodyFormat: (_, { categories }) => (\n      <span>{categories.map(category => category.title).join(\", \")}</span>\n    ),\n    isKey: false,\n    dataSort: false\n  },\n  price: {\n    title: \"Price\",\n    getBodyFormat: (_, { price }) => <span>{price}</span>,\n    isKey: false,\n    dataSort: true\n  },\n  rating: {\n    title: \"Rating\",\n    getBodyFormat: (_, { rating }) => <span>{rating}</span>,\n    isKey: false,\n    dataSort: true\n  },\n  review_count: {\n    title: \"Review Count\",\n    getBodyFormat: (_, { review_count: reviews }) => <span>{reviews}</span>,\n    isKey: false,\n    dataSort: true\n  },\n  url: {\n    title: \"URL\",\n    getBodyFormat: (_, { url }) => (\n      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n        Yelp\n      </a>\n    ),\n    isKey: false,\n    dataSort: false\n  }\n};\n\nexport const RESTAURANTS_PAGE_SCHEMA = {\n  ...RESTAURANT_SCHEMA,\n  city: {\n    title: \"City\",\n    getBodyFormat: (_, { location: { city } }) => (\n      <Link to={`/city/${getCityIdByName(city)}`}>{city}</Link>\n    )\n  }\n};\n\nexport const EVENT_SCHEMA = {\n  name: {\n    title: \"Events\",\n    getBodyFormat: (_, { id, name }) => <Link to={`/event/${id}`}>{name}</Link>,\n    isKey: true,\n    dataSort: true\n  },\n  location: {\n    title: \"Address\",\n    getBodyFormat: (_, { location: { display_address: address } }) => (\n      <span>{address.join(\", \")}</span>\n    ),\n    isKey: false,\n    dataSort: false\n  },\n  interested_count: {\n    title: \"Interested Count\",\n    getBodyFormat: (_, { interested_count: count }) => <span>{count}</span>,\n    isKey: false,\n    dataSort: true\n  },\n  is_free: {\n    title: \"Free\",\n    getBodyFormat: (_, { is_free: isFree }) => (\n      <span>{isFree ? \"Yes\" : \"No\"}</span>\n    ),\n    isKey: false,\n    dataSort: true\n  },\n  description: {\n    title: \"Description\",\n    getBodyFormat: (_, { description }) => <span>{description}</span>,\n    isKey: false,\n    dataSort: false\n  },\n  category: {\n    title: \"Category\",\n    getBodyFormat: (_, { category }) => <span>{category}</span>,\n    isKey: false,\n    dataSort: true\n  },\n  time: {\n    title: \"Time\",\n    getBodyFormat: (_, { time_start: start, time_end: end }) => (\n      <span>\n        {new Date(start).toLocaleDateString()}\n        {end && `- ${new Date(end).toLocaleDateString()}`}\n      </span>\n    ),\n    isKey: false,\n    dataSort: true\n  },\n  url: {\n    title: \"URL\",\n    getBodyFormat: (_, { event_site_url: url }) => (\n      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n        Yelp\n      </a>\n    ),\n    isKey: false,\n    dataSort: false\n  }\n};\n\nexport const EVENTS_PAGE_SCHEMA = {\n  ...EVENT_SCHEMA,\n  city: {\n    title: \"City\",\n    getBodyFormat: (_, { location: { city } }) => (\n      <Link to={`/city/${getCityIdByName(city)}`}>{city}</Link>\n    )\n  }\n};\n\nexport const CITY_SCHEMA = {\n  name: {\n    title: \"City\",\n    getBodyFormat: (_, { id, name }) => <Link to={`/city/${id}`}>{name}</Link>,\n    isKey: true,\n    dataSort: true\n  },\n  state: {\n    title: \"State\",\n    getBodyFormat: (_, { state }) => <span>{state}</span>,\n    isKey: false,\n    dataSort: true\n  },\n  population: {\n    title: \"Population\",\n    getBodyFormat: (_, { population }) => <span>{population}</span>,\n    isKey: false,\n    dataSort: true\n  },\n  description: {\n    title: \"Description\",\n    getBodyFormat: (_, { description }) => (\n      <span>{description.replace(/^\"|\"$/g, \"\")}</span>\n    ),\n    isKey: false,\n    dataSort: false\n  },\n  map: {\n    title: \"Map\",\n    getBodyFormat: (_, { latitude, longitude }) => (\n      <a\n        href={getGoogleMapLinkByCoordinates(latitude, longitude)}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Map\n      </a>\n    ),\n    isKey: false,\n    dataSort: false\n  }\n};\n\nexport const ORDER_SCHEMA = [\n  { title: \"Ascending\", key: \"asc\" },\n  { title: \"Descending\", key: \"desc\" }\n];\n\nexport const TABS = {\n  restaurants: {\n    key: \"restaurants\",\n    title: \"Restaurants\"\n  },\n  airbnbs: {\n    key: \"airbnbs\",\n    title: \"Airbnbs\"\n  },\n  events: {\n    key: \"events\",\n    title: \"Events\"\n  }\n};\n\nexport const SEARCH_ON = {\n  restaurants: {\n    key: \"restaurants\",\n    title: \"Restaurants\"\n  },\n  events: {\n    key: \"events\",\n    title: \"Events\"\n  },\n  cities: {\n    key: \"cities\",\n    title: \"Cities\"\n  }\n};\n\nexport const CATEGORIES = [\n  {\n    alias: \"afghani\",\n    title: \"Afghan\"\n  },\n  {\n    alias: \"african\",\n    title: \"African\"\n  },\n  {\n    alias: \"arabian\",\n    title: \"Arabian\"\n  },\n  {\n    alias: \"argentine\",\n    title: \"Argentine\"\n  },\n  {\n    alias: \"armenian\",\n    title: \"Armenian\"\n  },\n  {\n    alias: \"asianfusion\",\n    title: \"Asian Fusion\"\n  },\n  {\n    alias: \"australian\",\n    title: \"Australian\"\n  },\n  {\n    alias: \"austrian\",\n    title: \"Austrian\"\n  },\n  {\n    alias: \"bangladeshi\",\n    title: \"Bangladeshi\"\n  },\n  {\n    alias: \"basque\",\n    title: \"Basque\"\n  },\n  {\n    alias: \"bbq\",\n    title: \"Barbeque\"\n  },\n  {\n    alias: \"belgian\",\n    title: \"Belgian\"\n  },\n  {\n    alias: \"brasseries\",\n    title: \"Brasseries\"\n  },\n  {\n    alias: \"brazilian\",\n    title: \"Brazilian\"\n  },\n  {\n    alias: \"breakfast_brunch\",\n    title: \"Breakfast & Brunch\"\n  },\n  {\n    alias: \"british\",\n    title: \"British\"\n  },\n  {\n    alias: \"buffets\",\n    title: \"Buffets\"\n  },\n  {\n    alias: \"bulgarian\",\n    title: \"Bulgarian\"\n  },\n  {\n    alias: \"burgers\",\n    title: \"Burgers\"\n  },\n  {\n    alias: \"burmese\",\n    title: \"Burmese\"\n  },\n  {\n    alias: \"cafes\",\n    title: \"Cafes\"\n  },\n  {\n    alias: \"cafeteria\",\n    title: \"Cafeteria\"\n  },\n  {\n    alias: \"cajun\",\n    title: \"Cajun/Creole\"\n  },\n  {\n    alias: \"cambodian\",\n    title: \"Cambodian\"\n  },\n  {\n    alias: \"caribbean\",\n    title: \"Caribbean\"\n  },\n  {\n    alias: \"catalan\",\n    title: \"Catalan\"\n  },\n  {\n    alias: \"cheesesteaks\",\n    title: \"Cheesesteaks\"\n  },\n  {\n    alias: \"chicken_wings\",\n    title: \"Chicken Wings\"\n  },\n  {\n    alias: \"chickenshop\",\n    title: \"Chicken Shop\"\n  },\n  {\n    alias: \"chinese\",\n    title: \"Chinese\"\n  },\n  {\n    alias: \"comfortfood\",\n    title: \"Comfort Food\"\n  },\n  {\n    alias: \"creperies\",\n    title: \"Creperies\"\n  },\n  {\n    alias: \"cuban\",\n    title: \"Cuban\"\n  },\n  {\n    alias: \"czech\",\n    title: \"Czech\"\n  },\n  {\n    alias: \"delis\",\n    title: \"Delis\"\n  },\n  {\n    alias: \"diners\",\n    title: \"Diners\"\n  },\n  {\n    alias: \"dinnertheater\",\n    title: \"Dinner Theater\"\n  },\n  {\n    alias: \"eritrean\",\n    title: \"Eritrean\"\n  },\n  {\n    alias: \"ethiopian\",\n    title: \"Ethiopian\"\n  },\n  {\n    alias: \"filipino\",\n    title: \"Filipino\"\n  },\n  {\n    alias: \"fishnchips\",\n    title: \"Fish & Chips\"\n  },\n  {\n    alias: \"fondue\",\n    title: \"Fondue\"\n  },\n  {\n    alias: \"food_court\",\n    title: \"Food Court\"\n  },\n  {\n    alias: \"foodstands\",\n    title: \"Food Stands\"\n  },\n  {\n    alias: \"french\",\n    title: \"French\"\n  },\n  {\n    alias: \"gamemeat\",\n    title: \"Game Meat\"\n  },\n  {\n    alias: \"gastropubs\",\n    title: \"Gastropubs\"\n  },\n  {\n    alias: \"georgian\",\n    title: \"Georgian\"\n  },\n  {\n    alias: \"german\",\n    title: \"German\"\n  },\n  {\n    alias: \"gluten_free\",\n    title: \"Gluten-Free\"\n  },\n  {\n    alias: \"greek\",\n    title: \"Greek\"\n  },\n  {\n    alias: \"guamanian\",\n    title: \"Guamanian\"\n  },\n  {\n    alias: \"halal\",\n    title: \"Halal\"\n  },\n  {\n    alias: \"hawaiian\",\n    title: \"Hawaiian\"\n  },\n  {\n    alias: \"himalayan\",\n    title: \"Himalayan/Nepalese\"\n  },\n  {\n    alias: \"hkcafe\",\n    title: \"Hong Kong Style Cafe\"\n  },\n  {\n    alias: \"honduran\",\n    title: \"Honduran\"\n  },\n  {\n    alias: \"hotdog\",\n    title: \"Hot Dogs\"\n  },\n  {\n    alias: \"hotdogs\",\n    title: \"Fast Food\"\n  },\n  {\n    alias: \"hotpot\",\n    title: \"Hot Pot\"\n  },\n  {\n    alias: \"hungarian\",\n    title: \"Hungarian\"\n  },\n  {\n    alias: \"iberian\",\n    title: \"Iberian\"\n  },\n  {\n    alias: \"indonesian\",\n    title: \"Indonesian\"\n  },\n  {\n    alias: \"indpak\",\n    title: \"Indian\"\n  },\n  {\n    alias: \"irish\",\n    title: \"Irish\"\n  },\n  {\n    alias: \"italian\",\n    title: \"Italian\"\n  },\n  {\n    alias: \"japanese\",\n    title: \"Japanese\"\n  },\n  {\n    alias: \"kebab\",\n    title: \"Kebab\"\n  },\n  {\n    alias: \"korean\",\n    title: \"Korean\"\n  },\n  {\n    alias: \"kosher\",\n    title: \"Kosher\"\n  },\n  {\n    alias: \"laotian\",\n    title: \"Laotian\"\n  },\n  {\n    alias: \"latin\",\n    title: \"Latin American\"\n  },\n  {\n    alias: \"malaysian\",\n    title: \"Malaysian\"\n  },\n  {\n    alias: \"mediterranean\",\n    title: \"Mediterranean\"\n  },\n  {\n    alias: \"mexican\",\n    title: \"Mexican\"\n  },\n  {\n    alias: \"mideastern\",\n    title: \"Middle Eastern\"\n  },\n  {\n    alias: \"modern_european\",\n    title: \"Modern European\"\n  },\n  {\n    alias: \"mongolian\",\n    title: \"Mongolian\"\n  },\n  {\n    alias: \"moroccan\",\n    title: \"Moroccan\"\n  },\n  {\n    alias: \"newamerican\",\n    title: \"American (New)\"\n  },\n  {\n    alias: \"newmexican\",\n    title: \"New Mexican Cuisine\"\n  },\n  {\n    alias: \"nicaraguan\",\n    title: \"Nicaraguan\"\n  },\n  {\n    alias: \"noodles\",\n    title: \"Noodles\"\n  },\n  {\n    alias: \"pakistani\",\n    title: \"Pakistani\"\n  },\n  {\n    alias: \"panasian\",\n    title: \"Pan Asian\"\n  },\n  {\n    alias: \"persian\",\n    title: \"Persian/Iranian\"\n  },\n  {\n    alias: \"peruvian\",\n    title: \"Peruvian\"\n  },\n  {\n    alias: \"pizza\",\n    title: \"Pizza\"\n  },\n  {\n    alias: \"polish\",\n    title: \"Polish\"\n  },\n  {\n    alias: \"polynesian\",\n    title: \"Polynesian\"\n  },\n  {\n    alias: \"popuprestaurants\",\n    title: \"Pop-Up Restaurants\"\n  },\n  {\n    alias: \"portuguese\",\n    title: \"Portuguese\"\n  },\n  {\n    alias: \"poutineries\",\n    title: \"Poutineries\"\n  },\n  {\n    alias: \"raw_food\",\n    title: \"Live/Raw Food\"\n  },\n  {\n    alias: \"russian\",\n    title: \"Russian\"\n  },\n  {\n    alias: \"salad\",\n    title: \"Salad\"\n  },\n  {\n    alias: \"sandwiches\",\n    title: \"Sandwiches\"\n  },\n  {\n    alias: \"scandinavian\",\n    title: \"Scandinavian\"\n  },\n  {\n    alias: \"scottish\",\n    title: \"Scottish\"\n  },\n  {\n    alias: \"seafood\",\n    title: \"Seafood\"\n  },\n  {\n    alias: \"singaporean\",\n    title: \"Singaporean\"\n  },\n  {\n    alias: \"slovakian\",\n    title: \"Slovakian\"\n  },\n  {\n    alias: \"somali\",\n    title: \"Somali\"\n  },\n  {\n    alias: \"soulfood\",\n    title: \"Soul Food\"\n  },\n  {\n    alias: \"soup\",\n    title: \"Soup\"\n  },\n  {\n    alias: \"southern\",\n    title: \"Southern\"\n  },\n  {\n    alias: \"spanish\",\n    title: \"Spanish\"\n  },\n  {\n    alias: \"srilankan\",\n    title: \"Sri Lankan\"\n  },\n  {\n    alias: \"steak\",\n    title: \"Steakhouses\"\n  },\n  {\n    alias: \"supperclubs\",\n    title: \"Supper Clubs\"\n  },\n  {\n    alias: \"sushi\",\n    title: \"Sushi Bars\"\n  },\n  {\n    alias: \"syrian\",\n    title: \"Syrian\"\n  },\n  {\n    alias: \"taiwanese\",\n    title: \"Taiwanese\"\n  },\n  {\n    alias: \"tapas\",\n    title: \"Tapas Bars\"\n  },\n  {\n    alias: \"tapasmallplates\",\n    title: \"Tapas/Small Plates\"\n  },\n  {\n    alias: \"tex-mex\",\n    title: \"Tex-Mex\"\n  },\n  {\n    alias: \"thai\",\n    title: \"Thai\"\n  },\n  {\n    alias: \"tradamerican\",\n    title: \"American (Traditional)\"\n  },\n  {\n    alias: \"turkish\",\n    title: \"Turkish\"\n  },\n  {\n    alias: \"ukrainian\",\n    title: \"Ukrainian\"\n  },\n  {\n    alias: \"uzbek\",\n    title: \"Uzbek\"\n  },\n  {\n    alias: \"vegan\",\n    title: \"Vegan\"\n  },\n  {\n    alias: \"vegetarian\",\n    title: \"Vegetarian\"\n  },\n  {\n    alias: \"vietnamese\",\n    title: \"Vietnamese\"\n  },\n  {\n    alias: \"waffles\",\n    title: \"Waffles\"\n  },\n  {\n    alias: \"wraps\",\n    title: \"Wraps\"\n  }\n];\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nimport { Spinner } from \"react-bootstrap\";\nimport \"./sortable-table.css\";\n\nconst SortableTable = ({ data, settings }) => {\n  const options = {\n    noDataText: (\n      <div className=\"w-100 d-flex justify-content-center\">\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      </div>\n    )\n  };\n\n  return (\n    <BootstrapTable\n      version=\"4\"\n      data={data}\n      options={options}\n      tableStyle={{ marginBottom: 0 }}\n      striped\n      hover\n      tableBodyClass=\"table-dark\"\n      tableHeaderClass=\"table-dark\"\n    >\n      {Object.keys(settings).map(key => {\n        const {\n          getBodyFormat,\n          title,\n          isKey,\n          dataSort,\n          sortFunc,\n          width\n        } = settings[key];\n        return (\n          <TableHeaderColumn\n            key={key}\n            isKey={isKey}\n            dataField={key}\n            dataFormat={(_, row) => getBodyFormat(key, row)}\n            dataSort={dataSort}\n            width={width}\n            sortFunc={sortFunc}\n          >\n            {title}\n          </TableHeaderColumn>\n        );\n      })}\n    </BootstrapTable>\n  );\n};\n\nSortableTable.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  settings: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    getBodyFormat: PropTypes.func.isRequired,\n    isKey: PropTypes.bool.isRequired,\n    dataSort: PropTypes.bool.isRequired,\n    sortFunc: PropTypes.func,\n    width: PropTypes.number\n  }).isRequired\n};\n\nexport default SortableTable;\n","import React, {useState} from \"react\";\nimport { Toast } from \"react-bootstrap\";\n\nconst ToastNote = (message) => {\n    const [showA, setShowA] = useState(true);\n    const toggleShowA = () => setShowA(!showA);\n\n    return (\n        <Toast show={showA} onClose={toggleShowA} style={{margin: 'auto'}}\n        >\n            <Toast.Header style={{margin:'auto'}}>\n                <strong style={{color:'red'}}>Error</strong>\n            </Toast.Header>\n            <Toast.Body>\n                Data is not found.\n            </Toast.Body>\n        </Toast>\n        );\n};\n    \nexport default ToastNote;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Pagination as BSPagination } from \"react-bootstrap\";\nimport \"./pagination.css\";\n\nimport { MAX_PAGE_NUM, LIMIT } from \"../lib/constants\";\n\nconst MAX_NUM_BUTTONS = 5;\n\nconst getButtons = (currentPage, totalPages) => {\n  if (totalPages > MAX_NUM_BUTTONS) {\n    let startsAt = currentPage - 2;\n    if (startsAt < 1) {\n      startsAt = 1;\n    }\n    if (currentPage + 2 >= totalPages) {\n      startsAt = totalPages - MAX_NUM_BUTTONS + 1;\n    }\n\n    return [...Array(MAX_NUM_BUTTONS).keys()].map(key => key + startsAt);\n  }\n\n  return [...Array(totalPages).keys()].map(key => key + 1);\n};\n\nconst Pagination = ({ totalRecords, loadPage, currentPage }) => {\n  const totalPages = Math.min(Math.floor(totalRecords / LIMIT), MAX_PAGE_NUM);\n\n  const paginationButtons = getButtons(currentPage, totalPages);\n\n  const goToPage = num => {\n    if (num === currentPage) {\n      return;\n    }\n\n    loadPage(num);\n  };\n\n  return (\n    <BSPagination>\n      <BSPagination.First\n        onClick={() => goToPage(1)}\n        disabled={currentPage === 1}\n      />\n      <BSPagination.Prev\n        onClick={() => goToPage(currentPage - 1)}\n        disabled={currentPage - 1 < 1}\n      />\n      {paginationButtons[0] !== 1 && <BSPagination.Ellipsis />}\n      {paginationButtons.map(num => (\n        <BSPagination.Item\n          onClick={() => goToPage(num)}\n          key={num}\n          active={num === currentPage}\n        >\n          {num}\n        </BSPagination.Item>\n      ))}\n      {paginationButtons[paginationButtons.length - 1] !== totalPages && (\n        <BSPagination.Ellipsis />\n      )}\n      <BSPagination.Next\n        onClick={() => goToPage(currentPage + 1)}\n        disabled={currentPage + 1 > totalPages}\n      />\n      <BSPagination.Last\n        onClick={() => goToPage(totalPages)}\n        disabled={currentPage === totalPages}\n      />\n    </BSPagination>\n  );\n};\n\nPagination.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  loadPage: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ButtonGroup, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport { getSortableAttributes } from \"../lib/util\";\nimport { ORDER_SCHEMA } from \"../lib/constants\";\n\nconst SortOn = ({ sortOn, updateSortOn, schema }) => {\n  const sortableAttributes = getSortableAttributes(schema);\n  const { sort, order } = sortOn;\n  return (\n    <div>\n      <DropdownButton\n        as={ButtonGroup}\n        variant=\"outline-primary\"\n        title={`Sort on ${\n          sortableAttributes[sort] ? sortableAttributes[sort].title : \"\"\n        }`}\n        alignRight\n      >\n        {Object.keys(sortableAttributes).map(key => (\n          <Dropdown.Item\n            key={key}\n            eventKey={key}\n            active={key === sort}\n            onClick={() => {\n              // use the following instead of disabled to preserve active style\n              if (key === sort) {\n                return;\n              }\n              updateSortOn({ ...sortOn, sort: key });\n            }}\n          >\n            {sortableAttributes[key].title}\n          </Dropdown.Item>\n        ))}\n      </DropdownButton>\n      {order && (\n        <DropdownButton\n          as={ButtonGroup}\n          variant=\"outline-primary\"\n          title={(ORDER_SCHEMA.find(({ key }) => key === order) || {}).title}\n          alignRight\n        >\n          {ORDER_SCHEMA.map(({ title, key }) => (\n            <Dropdown.Item\n              key={key}\n              eventKey={key}\n              active={key === order}\n              onClick={() => {\n                if (key === order) {\n                  return;\n                }\n                updateSortOn({ ...sortOn, order: key });\n              }}\n            >\n              {title}\n            </Dropdown.Item>\n          ))}\n        </DropdownButton>\n      )}\n    </div>\n  );\n};\n\nSortOn.propTypes = {\n  sortOn: PropTypes.shape({\n    sort: PropTypes.string.isRequired,\n    order: PropTypes.oneOf([\"asc\", \"desc\"])\n  }).isRequired,\n  updateSortOn: PropTypes.func.isRequired,\n  schema: PropTypes.object.isRequired\n};\n\nexport default SortOn;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TagsInput from \"react-tagsinput\";\nimport Autosuggest from \"react-autosuggest\";\nimport { Button } from \"react-bootstrap\";\nimport \"./tag-input.css\";\n\nclass TagInput extends React.Component {\n  constructor() {\n    super();\n    this.state = { tags: [] };\n  }\n\n  handleChange = tags => {\n    this.setState({ tags });\n  };\n\n  render() {\n    const { getAllSuggestions, submit } = this.props;\n    const { tags } = this.state;\n    function autocompleteRenderInput({ addTag, ...props }) {\n      const { value, ref, onChange } = props;\n      const handleOnChange = (e, { newValue, method }) => {\n        if (method === \"enter\") {\n          e.preventDefault();\n        } else {\n          onChange(e);\n        }\n      };\n\n      const inputValue = (value && value.trim().toLowerCase()) || \"\";\n      const inputLength = inputValue.length;\n\n      const suggestions = getAllSuggestions().filter(\n        suggestion =>\n          suggestion.title.toLowerCase().slice(0, inputLength) === inputValue\n      );\n\n      // TODO: enter to add top suggestion\n      // TODO: make the container float - react portal\n      return (\n        <Autosuggest\n          ref={ref}\n          suggestions={suggestions}\n          shouldRenderSuggestions={item => item && item.trim().length > 0}\n          getSuggestionValue={suggestion => suggestion.title}\n          renderSuggestion={suggestion => <span>{suggestion.title}</span>}\n          inputProps={{ ...props, onChange: handleOnChange }}\n          onSuggestionSelected={(e, { suggestion }) => {\n            addTag(suggestion.title);\n          }}\n          onSuggestionsClearRequested={() => {}}\n          onSuggestionsFetchRequested={() => {}}\n        />\n      );\n    }\n\n    return (\n      <div className=\"row no-gutters justify-content-between\">\n        <TagsInput\n          renderInput={autocompleteRenderInput}\n          value={tags}\n          onChange={this.handleChange}\n        />\n\n        <Button variant=\"outline-primary\" onClick={() => submit(tags)}>\n          Filter\n        </Button>\n      </div>\n    );\n  }\n}\n\nTagInput.propTypes = {\n  submit: PropTypes.func.isRequired,\n  getAllSuggestions: PropTypes.func.isRequired\n};\n\nexport default TagInput;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TagInput from \"./tag-input\";\n\nconst FilterOn = ({ filterSchema, filterOn, updateFilterOn }) => {\n  const { category: categorySchema } = filterSchema;\n\n  if (categorySchema) {\n    return (\n      <TagInput\n        getAllSuggestions={() => categorySchema}\n        submit={categories => {\n          updateFilterOn({\n            ...filterOn,\n            category: categorySchema.filter(item =>\n              categories.includes(item.title)\n            )\n          });\n        }}\n      />\n    );\n  }\n\n  return <></>;\n};\n\nFilterOn.defaultProps = {\n  filterSchema: {},\n  filterOn: \"\"\n};\n\nFilterOn.propTypes = {\n  filterSchema: PropTypes.object,\n  filterOn: PropTypes.string,\n  updateFilterOn: PropTypes.func.isRequired\n};\n\nexport default FilterOn;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import {\n//   ButtonToolbar,\n//   ButtonGroup,\n//   InputGroup,\n//   FormControl\n// } from \"react-bootstrap\";\nimport Pagination from \"../components/pagination\";\nimport SortOn from \"../components/sort-on\";\nimport FilterOn from \"../components/filter-on\";\nimport \"./table-actions.css\";\n\nconst TableActions = ({\n  totalRecords,\n  loadPage,\n  currentPage,\n  sortOn,\n  filterOn,\n  updateSortOn,\n  updateFilterOn,\n  sortSchema,\n  filterSchema\n}) => {\n  return (\n    <div\n      className=\"table-actions\"\n      role=\"toolbar\"\n      aria-label=\"Table actions, includes pagination, sort options, and a search bar\"\n    >\n      {/* <InputGroup className=\"mb-2\">\n        <InputGroup.Prepend>\n          <InputGroup.Text>@</InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          type=\"text\"\n          placeholder=\"Search\"\n          aria-label=\"search\"\n          aria-describedby=\"btnGroupAddon2\"\n        />\n      </InputGroup> */}\n      <FilterOn\n        className=\"mb-2\"\n        filterSchema={filterSchema}\n        filterOn={filterOn}\n        updateFilterOn={updateFilterOn}\n      />\n\n      <div className=\"row no-gutters justify-content-between\">\n        <Pagination\n          totalRecords={totalRecords}\n          loadPage={loadPage}\n          currentPage={currentPage}\n        />\n\n        <SortOn\n          sortOn={sortOn}\n          updateSortOn={updateSortOn}\n          schema={sortSchema}\n        />\n      </div>\n    </div>\n  );\n};\n\nTableActions.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  loadPage: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  filterSchema: PropTypes.object.isRequired,\n  filterOn: PropTypes.string.isRequired,\n  updateFilterOn: PropTypes.func.isRequired,\n  sortSchema: PropTypes.object.isRequired,\n  sortOn: PropTypes.shape({\n    sort: PropTypes.string.isRequired,\n    order: PropTypes.oneOf([\"asc\", \"desc\"])\n  }).isRequired,\n  updateSortOn: PropTypes.func.isRequired\n};\n\nexport default TableActions;\n","import { useState, useCallback } from \"react\";\nimport apiFetch from \"../lib/api-fetch\";\nimport { getUrl } from \"../lib/util\";\n\nconst useDataStore = init => {\n  const { url, params: initialParams, name, option = {} } = init();\n  const [recordsByPage, setRecordsByPage] = useState([]);\n  const [recordsCount, setRecordsCount] = useState(1);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [params, setParams] = useState(initialParams);\n\n  const [fetching, setFetching] = useState(false);\n  const [error, setError] = useState(false);\n  const [complete, setComplete] = useState(false);\n\n  const reset = () => {\n    setRecordsByPage([]);\n    setRecordsCount(1);\n    setCurrentPage(1);\n    setComplete(false);\n  };\n\n  const onFetchSuccess = useCallback(\n    ({ response }, page) => {\n      setRecordsByPage({ ...recordsByPage, [page]: response[name] });\n      setCurrentPage(page);\n      setRecordsCount(response.total);\n      setFetching(false);\n      setError(false);\n    },\n    [name, recordsByPage]\n  );\n\n  const onFetchFail = useCallback(err => {\n    setFetching(false);\n    setError(true);\n    throw err;\n  }, []);\n\n  const fetchWithUrl = useCallback(urlToFetch => apiFetch(urlToFetch, option), [\n    option\n  ]);\n\n  const fetchPage = useCallback(\n    page => {\n      if (recordsByPage[page]) {\n        return setCurrentPage(page);\n      }\n\n      const newParams = {\n        ...params,\n        page\n      };\n      const newURL = getUrl(url, newParams);\n      setParams(newParams);\n      return fetchWithUrl(newURL)\n        .then(resp => {\n          onFetchSuccess(resp, page);\n          return resp;\n        })\n        .catch(err => {\n          onFetchFail(err);\n          return err;\n        });\n    },\n    [fetchWithUrl, onFetchFail, onFetchSuccess, params, recordsByPage, url]\n  );\n\n  const sort = ({ sort, order }) => {\n    if (sort === params.sort && order === params.order) {\n      return;\n    }\n    reset();\n    const newParams = {\n      ...params,\n      page: 1,\n      sort,\n      order\n    };\n    const newURL = getUrl(url, newParams);\n\n    setParams(newParams);\n    fetchWithUrl(newURL)\n      .then(resp => {\n        onFetchSuccess(resp, 1);\n        return resp;\n      })\n      .catch(err => {\n        onFetchFail(err);\n        return err;\n      });\n  };\n\n  const filter = filterOn => {\n    if (filterOn === params.filter) {\n      return;\n    }\n    reset();\n\n    const newParams = {\n      ...params,\n      page: 1,\n      ...filterOn\n    };\n\n    const newURL = getUrl(url, newParams);\n    setParams(newParams);\n    fetchWithUrl(newURL)\n      .then(resp => {\n        onFetchSuccess(resp, 1);\n        return resp;\n      })\n      .catch(err => {\n        onFetchFail(err);\n        return err;\n      });\n  };\n\n  return [\n    {\n      recordsCount,\n      pageRecords: recordsByPage[currentPage] || [],\n      fetching,\n      complete,\n      currentPage\n    },\n    {\n      fetchPage,\n      sort,\n      filter\n    }\n  ];\n};\n\nexport default useDataStore;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { CITY_SCHEMA } from \"../lib/constants\";\nimport SortableTable from \"../components/sortable-table\";\nimport Toast from \"../components/toast\";\nimport TableActions from \"./table-actions\";\nimport useDataStore from \"../hooks/use-data-store\";\n\nconst Cities = () => {\n  const [isError, setIsError] = useState(false);\n  const [sortOn, setSortOn] = useState({\n    sort: \"name\",\n    order: \"asc\"\n  });\n\n  const [\n    { recordsCount, fetching, pageRecords, currentPage },\n    { fetchPage, sort }\n  ] = useDataStore(() => ({\n    url: `/cities`,\n    params: {\n      page: 1,\n      sort: sortOn\n    },\n    name: \"cities\",\n    option: {\n      json: true\n    }\n  }));\n\n  useEffect(() => {\n    fetchPage(1).catch(() => setIsError(true));\n    // only fetch once when mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const updateSortOn = useCallback(\n    newSortOn => {\n      setSortOn(newSortOn);\n      sort(newSortOn);\n    },\n    [sort]\n  );\n\n  if (fetching) {\n    return <>Loading...</>;\n  }\n  if (isError) {\n    return <Toast />;\n  }\n  return (\n    <Container fluid>\n      <TableActions\n        totalRecords={recordsCount}\n        loadPage={fetchPage}\n        currentPage={currentPage}\n        sortSchema={CITY_SCHEMA}\n        sortOn={sortOn}\n        updateSortOn={updateSortOn}\n      />\n      <SortableTable settings={CITY_SCHEMA} data={pageRecords} />\n    </Container>\n  );\n};\n\nexport default Cities;\n","import React from \"react\";\nimport \"./cities.css\";\nimport Cities from \"../containers/cities\";\n\nconst CitiesPage = () => (\n  <>\n    <h1>Cities</h1>\n    <Cities />\n  </>\n);\n\nexport default CitiesPage;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container } from \"react-bootstrap\";\nimport { RESTAURANT_SORTABLE_SCHEMA, CATEGORIES } from \"../lib/constants\";\nimport SortableTable from \"../components/sortable-table\";\nimport Toast from \"../components/toast\";\nimport TableActions from \"./table-actions\";\nimport useDataStore from \"../hooks/use-data-store\";\n\nconst getCategory = filters => {\n  const { category } = filters;\n  let categoryAlias = \"\";\n  if (category) {\n    categoryAlias = category.map(item => item.alias).join(\",\");\n  }\n  return categoryAlias;\n};\n\nconst initDataStore = (city, coordinates, initialFilters, initialSortOn) => {\n  const categoryAlias = getCategory(initialFilters);\n  const { sort, order } = initialSortOn;\n  if (city) {\n    return {\n      url: `/restaurants/${city}`,\n      params: {\n        page: 1,\n        sort,\n        order,\n        category: categoryAlias\n      },\n      name: \"businesses\"\n    };\n  }\n  const { longitude, latitude } = coordinates;\n  return {\n    url: `/restaurants`,\n    params: {\n      page: 1,\n      sort,\n      order,\n      longitude,\n      latitude,\n      categories: categoryAlias\n    },\n    name: \"businesses\"\n  };\n};\n\nconst Restaurants = ({ city, coordinates, initialFilters, tableSchema }) => {\n  const [isError, setIsError] = useState(false);\n  const [sortOn, setSortOn] = useState({\n    sort: \"best_match\"\n  });\n  const [filterOn, setFilterOn] = useState(initialFilters);\n\n  const [\n    { recordsCount, fetching, pageRecords, currentPage },\n    { fetchPage, sort, filter }\n  ] = useDataStore(() => initDataStore(city, coordinates, filterOn, sortOn));\n\n  useEffect(() => {\n    fetchPage(1).catch(() => setIsError(true));\n    // only fetch once when mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const updateSortOn = useCallback(\n    newSortOn => {\n      setSortOn(newSortOn);\n      sort(newSortOn);\n    },\n    [sort]\n  );\n\n  const updateFilterOn = useCallback(\n    newFilterOn => {\n      setFilterOn(newFilterOn);\n      filter({ categories: getCategory(newFilterOn) });\n    },\n    [filter]\n  );\n\n  if (fetching) {\n    return <>Loading...</>;\n  }\n  if (isError) {\n    return <Toast />;\n  }\n  return (\n    <Container fluid>\n      <TableActions\n        totalRecords={recordsCount}\n        loadPage={fetchPage}\n        currentPage={currentPage}\n        sortSchema={RESTAURANT_SORTABLE_SCHEMA}\n        filterSchema={{ category: CATEGORIES }}\n        sortOn={sortOn}\n        filterOn={filterOn}\n        updateSortOn={updateSortOn}\n        updateFilterOn={updateFilterOn}\n      />\n      <SortableTable settings={tableSchema} data={pageRecords} />\n    </Container>\n  );\n};\n\nRestaurants.defaultProps = {\n  city: \"\",\n  coordinates: {},\n  initialFilters: {}\n};\nRestaurants.propTypes = {\n  city: PropTypes.string,\n  coordinates: PropTypes.shape({\n    latitude: PropTypes.number.isRequired,\n    longitude: PropTypes.number.isRequired\n  }),\n  initialFilters: PropTypes.shape({\n    categories: PropTypes.array\n  }),\n  tableSchema: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    getBodyFormat: PropTypes.func.isRequired,\n    isKey: PropTypes.bool.isRequired,\n    dataSort: PropTypes.bool.isRequired,\n    sortFunc: PropTypes.func,\n    width: PropTypes.number\n  }).isRequired\n};\n\nexport default Restaurants;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container } from \"react-bootstrap\";\nimport { EVENT_SORTABLE_SCHEMA } from \"../lib/constants\";\nimport SortableTable from \"../components/sortable-table\";\nimport Toast from \"../components/toast\";\nimport TableActions from \"./table-actions\";\nimport useDataStore from \"../hooks/use-data-store\";\n\nconst Events = ({ city, coordinates, tableSchema }) => {\n  const [isError, setIsError] = useState(false);\n  const [sortOn, setSortOn] = useState({\n    sort: \"time_start\",\n    order: \"asc\"\n  });\n\n  const [\n    { recordsCount, fetching, pageRecords, currentPage },\n    { fetchPage, sort }\n  ] = useDataStore(() => {\n    const { sort, order } = sortOn;\n\n    if (city) {\n      return {\n        url: `/events/${city}`,\n        params: {\n          page: 1,\n          sort,\n          order\n        },\n        name: \"events\"\n      };\n    }\n    const { longitude, latitude } = coordinates;\n    return {\n      url: `/events`,\n      params: {\n        page: 1,\n        sort,\n        order,\n        longitude,\n        latitude\n      },\n      name: \"events\"\n    };\n  });\n\n  useEffect(() => {\n    fetchPage(1).catch(() => setIsError(true));\n    // only fetch once when mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const updateSortOn = useCallback(\n    newSortOn => {\n      setSortOn(newSortOn);\n      sort(newSortOn);\n    },\n    [sort]\n  );\n\n  if (fetching) {\n    return <>Loading...</>;\n  }\n  if (isError) {\n    return <Toast />;\n  }\n  return (\n    <Container fluid>\n      <TableActions\n        totalRecords={recordsCount}\n        loadPage={fetchPage}\n        currentPage={currentPage}\n        sortSchema={EVENT_SORTABLE_SCHEMA}\n        sortOn={sortOn}\n        updateSortOn={updateSortOn}\n      />\n      <SortableTable settings={tableSchema} data={pageRecords} />\n    </Container>\n  );\n};\nEvents.defaultProps = {\n  city: \"\",\n  coordinates: {}\n};\nEvents.propTypes = {\n  city: PropTypes.string,\n  coordinates: PropTypes.shape({\n    latitude: PropTypes.number.isRequired,\n    longitude: PropTypes.number.isRequired\n  }),\n  tableSchema: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    getBodyFormat: PropTypes.func.isRequired,\n    isKey: PropTypes.bool.isRequired,\n    dataSort: PropTypes.bool.isRequired,\n    sortFunc: PropTypes.func,\n    width: PropTypes.number\n  }).isRequired\n};\n\nexport default Events;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container } from \"react-bootstrap\";\nimport { AIRBNB_SCHEMA, AIRBNB_SORTABLE_SCHEMA } from \"../lib/constants\";\nimport SortableTable from \"../components/sortable-table\";\nimport Toast from \"../components/toast\";\nimport TableActions from \"./table-actions\";\nimport useDataStore from \"../hooks/use-data-store\";\n\nconst Airbnbs = ({ city, coordinates, setShowAirbnbs, setActiveTab }) => {\n  const [isError, setIsError] = useState(false);\n  const [sortOn, setSortOn] = useState({\n    sort: \"price\",\n    order: \"asc\"\n  });\n\n  const [\n    { recordsCount, fetching, pageRecords, currentPage },\n    { fetchPage, sort }\n  ] = useDataStore(() => {\n    const { sort, order } = sortOn;\n    if (city) {\n      return {\n        url: `/airbnbs/${city}`,\n        params: {\n          page: 1,\n          sort,\n          order\n        },\n        name: \"airbnbs\"\n      };\n    }\n    // TODO: after we implement get airbnb by coordinates, update this route\n    return {\n      url: `/airbnbs/Austin`,\n      params: {\n        page: 1,\n        sort,\n        order\n      },\n      name: \"airbnbs\"\n    };\n  });\n\n  useEffect(() => {\n    fetchPage(1).catch(() => {\n      setIsError(true);\n      setShowAirbnbs(false);\n      setActiveTab();\n    });\n    // only fetch once when mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const updateSortOn = useCallback(\n    newSortOn => {\n      setSortOn(newSortOn);\n      sort(newSortOn);\n    },\n    [sort]\n  );\n\n  if (fetching) {\n    return <></>;\n  }\n  if (isError) {\n    return <Toast />;\n  }\n  return (\n    <Container fluid>\n      <TableActions\n        totalRecords={recordsCount}\n        loadPage={fetchPage}\n        currentPage={currentPage}\n        sortSchema={AIRBNB_SORTABLE_SCHEMA}\n        sortOn={sortOn}\n        updateSortOn={updateSortOn}\n      />\n      <SortableTable settings={AIRBNB_SCHEMA} data={pageRecords} />\n    </Container>\n  );\n};\nAirbnbs.defaultProps = {\n  city: \"\",\n  coordinates: {},\n  setShowAirbnbs: () => {}\n};\nAirbnbs.propTypes = {\n  city: PropTypes.string,\n  coordinates: PropTypes.shape({\n    latitude: PropTypes.number.isRequired,\n    longitude: PropTypes.number.isRequired\n  }),\n  setShowAirbnbs: PropTypes.func\n};\n\nexport default Airbnbs;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { Tabs as BSTabs, Tab as BSTab } from \"react-bootstrap\";\nimport { TABS } from \"../lib/constants\";\n\nconst Tabs = ({ tabs }) => {\n  const location = useLocation();\n  const history = useHistory();\n\n  const validTabs = tabs.map(({ eventKey }) => eventKey);\n  const defaultTab = tabs[0];\n  const [activeTab, setActiveTab] = useState(() => {\n    const tabFromUrl = location.hash.replace(\"#\", \"\");\n    if (!validTabs.includes(tabFromUrl)) {\n      return defaultTab.eventKey;\n    }\n    return (tabFromUrl || defaultTab).eventKey;\n  });\n\n  const updateTab = newTab => {\n    setActiveTab(newTab);\n    history.replace({\n      hash: `#${newTab}`\n    });\n  };\n\n  return (\n    <BSTabs activeKey={activeTab} onSelect={updateTab}>\n      {tabs.map(({ eventKey, title, content }) => (\n        <BSTab eventKey={eventKey} title={title}>\n          {content}\n        </BSTab>\n      ))}\n    </BSTabs>\n  );\n};\n\nTabs.propTypes = {\n  tabs: PropTypes.arrayOf({\n    eventKey: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    content: PropTypes.node.isRequired\n  }).isRequired\n};\n\nexport default Tabs;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, useLocation, useHistory } from \"react-router-dom\";\nimport Table from \"react-bootstrap/Table\";\nimport apiFetch from \"../lib/api-fetch\";\nimport Restaurants from \"../containers/restaurants\";\nimport Events from \"../containers/events\";\nimport Airbnbs from \"../containers/airbnbs\";\nimport Tabs from \"../components/tabs\";\nimport { RESTAURANT_SCHEMA, EVENT_SCHEMA, TABS } from \"../lib/constants\";\n\nconst City = () => {\n  const { id } = useParams();\n\n  const [city, setCity] = useState(null);\n  const [image, setImage] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n  const [showAirbnbs, setShowAirbnbs] = useState(true);\n\n  // TODO: data should be passed down from parent\n  useEffect(() => {\n    apiFetch(`/city/${id}`, {})\n      .then(data => {\n        setCity(data.city);\n      })\n      .catch(() => {\n        setIsError(true);\n      });\n  }, [id]);\n\n  useEffect(() => {\n    fetch(`https://api.teleport.org/api/urban_areas/slug:${id}/images/`)\n      .then(resp => resp.json())\n      .then(data => {\n        try {\n          setImage(data.photos[0].image.web);\n        } catch (error) {\n          setImage();\n        }\n      });\n  }, []);\n\n  if (city) {\n    const { state, latitude, longitude, population, description, name } = city;\n\n    const eventProps = {\n      eventKey: TABS.events.key,\n      title: TABS.events.title,\n      content: <Events city={id} tableSchema={EVENT_SCHEMA} />\n    };\n    const restaurantProps = {\n      eventKey: TABS.restaurants.key,\n      title: TABS.restaurants.title,\n      content: <Restaurants city={id} tableSchema={RESTAURANT_SCHEMA} />\n    };\n    const airbnbProps = {\n      eventKey: TABS.airbnbs.key,\n      title: TABS.airbnbs.title,\n      content: (\n        <Airbnbs\n          city={name}\n          setShowAirbnbs={setShowAirbnbs}\n          setActiveTab={() => {}}\n        />\n      )\n    };\n\n    const tabs = [restaurantProps, eventProps];\n    if (showAirbnbs) {\n      tabs.push(airbnbProps);\n    }\n\n    return (\n      <>\n        <div className=\"header-image-container\">\n          <img src={image} alt={name} />\n        </div>\n        <h1>\n          {name}, {state}{\" \"}\n        </h1>\n\n        {/* TODO: extract this component */}\n        <div className=\"description\">\n          <h2>Description</h2>\n          <p>{description.replace(/^\"|\"$/g, \"\")}</p>\n          <h2>Statistics</h2>\n          <div className=\"stat-table\">\n            <Table>\n              <tr>\n                <th>Population</th>\n                <th>Longitude</th>\n                <th>Latitude</th>\n              </tr>\n              <tr>\n                <td>{population}</td>\n                <td>{longitude}</td>\n                <td>{latitude}</td>\n              </tr>\n            </Table>\n          </div>\n        </div>\n\n        <Tabs tabs={tabs} />\n      </>\n    );\n  }\n\n  return <> </>;\n};\n\nexport default City;\n","import React, { useContext } from \"react\";\nimport Restaurants from \"../containers/restaurants\";\nimport { CityHuntContext } from \"../App\";\nimport { RESTAURANTS_PAGE_SCHEMA } from \"../lib/constants\";\n\nconst RestaurantsPage = () => {\n  const { coordinates } = useContext(CityHuntContext);\n  return (\n    <>\n      <h1>Restaurants</h1>\n      {coordinates ? (\n        <Restaurants\n          tableSchema={RESTAURANTS_PAGE_SCHEMA}\n          coordinates={coordinates}\n        />\n      ) : (\n        // <></>\n        <Restaurants tableSchema={RESTAURANTS_PAGE_SCHEMA} city=\"austin\" />\n      )}\n    </>\n  );\n};\n\nexport default RestaurantsPage;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Badge, Card } from \"react-bootstrap\";\nimport apiFetch from \"../lib/api-fetch\";\nimport Restaurants from \"../containers/restaurants\";\nimport Events from \"../containers/events\";\nimport Airbnbs from \"../containers/airbnbs\";\nimport Tabs from \"../components/tabs\";\nimport { RESTAURANT_SCHEMA, EVENT_SCHEMA, TABS } from \"../lib/constants\";\nimport {\n  getGoogleMapLinkByCoordinates,\n  getWeekDay,\n  getHours,\n  getCityIdByName\n} from \"../lib/util\";\n\nconst getOpenHours = hours => (\n  <div>\n    {hours[0].open.map(({ day, start, end }) => (\n      <p key={day}>\n        {getWeekDay(day)}: {getHours(start)} - {getHours(end)}\n      </p>\n    ))}\n  </div>\n);\n\nconst Restaurant = () => {\n  const { id } = useParams();\n  const [restaurant, setRestaurant] = useState(null);\n  const [showAirbnbs, setShowAirbnbs] = useState(true);\n\n  useEffect(() => {\n    apiFetch(`/restaurant/${id}`, {}).then(data => {\n      setRestaurant(data.response);\n    });\n  }, [id]);\n\n  if (!restaurant) {\n    return <></>;\n  }\n\n  const {\n    name,\n    categories,\n    url,\n    hours,\n    location: { display_address: address, city },\n    image_url: image,\n    coordinates: { latitude, longitude },\n    price\n  } = restaurant;\n\n  const eventProps = {\n    eventKey: TABS.events.key,\n    title: TABS.events.title,\n    content: (\n      <Events\n        coordinates={{ longitude, latitude }}\n        tableSchema={EVENT_SCHEMA}\n      />\n    )\n  };\n  const restaurantProps = {\n    eventKey: TABS.restaurants.key,\n    title: TABS.restaurants.title,\n    content: (\n      <Restaurants\n        initialFilters={{ category: categories }}\n        coordinates={{ longitude, latitude }}\n        tableSchema={RESTAURANT_SCHEMA}\n      />\n    )\n  };\n  const airbnbProps = {\n    eventKey: TABS.airbnbs.key,\n    title: TABS.airbnbs.title,\n    content: (\n      <Airbnbs\n        coordinates={{ longitude, latitude }}\n        setShowAirbnbs={setShowAirbnbs}\n      />\n    )\n  };\n  const tabs = [restaurantProps, eventProps];\n  if (showAirbnbs) {\n    tabs.push(airbnbProps);\n  }\n\n  return (\n    <>\n      <div className=\"header-image-container\">\n        <img src={image} alt={name} />\n      </div>\n      <h1>{name}</h1>\n      <div className=\"text-center\">\n        {categories.map(({ title }) => (\n          <Badge pill variant=\"info\" key={title}>\n            #{title}\n          </Badge>\n        ))}\n      </div>\n\n      <div className=\"description\">\n        <h2>Location & Hours</h2>\n        <p>\n          <a\n            href={getGoogleMapLinkByCoordinates(latitude, longitude)}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {address.join(\", \")}\n          </a>\n        </p>\n\n        {getOpenHours(hours)}\n\n        <h2>Information</h2>\n\n        <p>Price {price}</p>\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n          Restaurant Website\n        </a>\n\n        <p>\n          Learn more about{\" \"}\n          <Link to={`/city/${getCityIdByName(city)}`}>{city}</Link>\n        </p>\n      </div>\n\n      <Tabs tabs={tabs} />\n    </>\n  );\n};\n\nexport default Restaurant;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport \"./event.css\";\nimport apiFetch from \"../lib/api-fetch\";\nimport Events from \"../containers/events\";\nimport Restaurants from \"../containers/restaurants\";\nimport Airbnbs from \"../containers/airbnbs\";\nimport Tabs from \"../components/tabs\";\nimport { getCityIdByName } from \"../lib/util\";\nimport { EVENT_SCHEMA, RESTAURANT_SCHEMA, TABS } from \"../lib/constants\";\n\nconst Event = () => {\n  const { id } = useParams();\n  const [event, setEvent] = useState(null);\n  const [showAirbnbs, setShowAirbnbs] = useState(true);\n\n  useEffect(() => {\n    apiFetch(`/event/${id}`, { useApi: true, json: true }).then(data => {\n      setEvent(data.response);\n    });\n  }, [id]);\n\n  if (!event) {\n    return <></>;\n  }\n\n  const {\n    name,\n    category,\n    categories,\n    location: { display_address: address, city },\n    image_url: image,\n    latitude,\n    longitude,\n    cost,\n    is_free: isFree,\n    event_site_url: url,\n    time_start: start,\n    time_end: end,\n    description\n  } = event;\n\n  const eventProps = {\n    eventKey: TABS.events.key,\n    title: TABS.events.title,\n    content: (\n      <Events\n        coordinates={{ longitude, latitude }}\n        tableSchema={EVENT_SCHEMA}\n      />\n    )\n  };\n  const restaurantProps = {\n    eventKey: TABS.restaurants.key,\n    title: TABS.restaurants.title,\n    content: (\n      <Restaurants\n        initialFilters={{ category: categories }}\n        coordinates={{ longitude, latitude }}\n        tableSchema={RESTAURANT_SCHEMA}\n      />\n    )\n  };\n  const airbnbProps = {\n    eventKey: TABS.airbnbs.key,\n    title: TABS.airbnbs.title,\n    content: (\n      <Airbnbs\n        coordinates={{ longitude, latitude }}\n        setShowAirbnbs={setShowAirbnbs}\n        setActiveTab={() => {}}\n      />\n    )\n  };\n\n  const tabs = [eventProps, restaurantProps];\n  if (showAirbnbs) {\n    tabs.push(airbnbProps);\n  }\n\n  return (\n    <>\n      <h1>{name}</h1>\n      <p>{description}</p>\n\n      <div className=\"event-info\">\n        <div className=\"event-image\">\n          <img src={image} alt={name} />\n        </div>\n        <div className=\"event-content\">\n          <p>\n            <span className=\"hashtag\">#{category}</span>\n          </p>\n          <p>\n            Event time: {new Date(start).toLocaleDateString()} -\n            {new Date(end).toLocaleDateString()}\n          </p>\n          <p>\n            Geolocation: ({latitude}, {longitude}){\" \"}\n          </p>\n          <p>\n            <a className=\"hyperlink\" href={url}>\n              Event Website\n            </a>\n          </p>\n          <p>Event Address: {address}</p>\n          <p>Cost of event: {isFree ? \"Free\" : cost || \"n/a\"}</p>\n          <p>\n            Learn more about{\" \"}\n            <Link className=\"hyperlink\" to={`/city/${getCityIdByName(city)}`}>\n              {city}\n            </Link>\n          </p>\n        </div>\n      </div>\n\n      <Tabs tabs={tabs} />\n    </>\n  );\n};\n\nexport default Event;\n","import React, { useContext } from \"react\";\nimport Events from \"../containers/events\";\nimport { CityHuntContext } from \"../App\";\nimport { EVENTS_PAGE_SCHEMA } from \"../lib/constants\";\n\nconst EventsPage = () => {\n  const { coordinates } = useContext(CityHuntContext);\n\n  return (\n    <>\n      <h1>Events</h1>\n      {coordinates ? (\n        <Events coordinates={coordinates} tableSchema={EVENTS_PAGE_SCHEMA} />\n      ) : (\n        // <></>\n        <Events city=\"austin\" tableSchema={EVENTS_PAGE_SCHEMA} />\n      )}\n    </>\n  );\n};\n\nexport default EventsPage;\n","import React, { useState, useCallback } from \"react\";\nimport {\n  Button,\n  Container,\n  Form,\n  FormControl,\n  Dropdown,\n  Tabs,\n  Tab,\n  Spinner\n} from \"react-bootstrap\";\nimport SortableTable from \"../components/sortable-table\";\nimport {\n  EVENTS_PAGE_SCHEMA,\n  RESTAURANTS_PAGE_SCHEMA,\n  SEARCH_ON,\n  CITY_SCHEMA\n} from \"../lib/constants\";\nimport { getUrl } from \"../lib/util\";\nimport apiFetch from \"../lib/api-fetch\";\nimport \"./search.css\";\n\nconst processResults = results => {\n  const { restaurants, events, cities } = results;\n  const restaurantsResults = (restaurants && restaurants.businesses) || [];\n  const eventsResults = (events && events.events) || [];\n  const citiesResults = cities || [];\n\n  return {\n    restaurantsResults,\n    eventsResults,\n    citiesResults\n  };\n};\n\nconst Search = () => {\n  const [query, setQuery] = useState(\"\");\n  const [lastUrl, setLastUrl] = useState(\"\");\n  const [fetching, setFetching] = useState(false);\n  const [modelToSearch, setModelToSearch] = useState(() => {\n    return Object.keys(SEARCH_ON).reduce((memo, key) => {\n      memo[key] = true;\n      return memo;\n    }, {});\n  });\n  const [restaurants, setRestaurants] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [cities, setCities] = useState([]);\n\n  const setDataFromResponse = useCallback(\n    ({ results }, override = false) => {\n      const {\n        restaurantsResults,\n        eventsResults,\n        citiesResults\n      } = processResults(results);\n\n      if (restaurantsResults.length) {\n        setRestaurants(\n          override\n            ? restaurantsResults\n            : [...restaurants, ...restaurantsResults]\n        );\n      }\n      if (eventsResults.length) {\n        setEvents(override ? eventsResults : [...events, ...eventsResults]);\n      }\n      if (citiesResults.length) {\n        setCities(override ? citiesResults : [...cities, ...citiesResults]);\n      }\n      setFetching(false);\n    },\n    [cities, events, restaurants]\n  );\n\n  const onSubmit = useCallback(() => {\n    setFetching(true);\n    const searchOn = Object.keys(modelToSearch).filter(\n      key => modelToSearch[key]\n    );\n\n    const url = getUrl(\"/search\", { q: query, on: searchOn });\n    if (lastUrl === url) {\n      console.log(\"same result, do nothing\");\n      return;\n    }\n    setLastUrl(url);\n    apiFetch(url, {})\n      .then(resp => setDataFromResponse(resp, true))\n      .catch(err => console.error(err));\n  }, [lastUrl, modelToSearch, query, setDataFromResponse]);\n\n  const getOffset = useCallback(\n    searchOn => {\n      if (searchOn === SEARCH_ON.restaurants.key) {\n        return restaurants.length;\n      }\n      if (searchOn === SEARCH_ON.events.key) {\n        return events.length;\n      }\n      if (searchOn === SEARCH_ON.cities.key) {\n        return cities.length;\n      }\n      return 0;\n    },\n    [events.length, restaurants.length, cities.length]\n  );\n\n  const fetchMore = useCallback(\n    searchOn => {\n      setFetching(true);\n      const url = getUrl(\"/search\", {\n        q: query,\n        on: searchOn,\n        offset: getOffset(searchOn)\n      });\n      setLastUrl(url);\n      apiFetch(url, {})\n        .then(setDataFromResponse)\n        .catch(err => console.error(err));\n    },\n    [getOffset, query, setDataFromResponse]\n  );\n\n  return (\n    <Container fluid className=\"full-page\">\n      <h1>Search CityHunt</h1>\n      <Form\n        inline\n        className=\"justify-content-center mb-5\"\n        onSubmit={e => e.preventDefault()}\n      >\n        <FormControl\n          type=\"text\"\n          id=\"search-bar\"\n          placeholder=\"Search\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n          // submit when hitting enter\n          onKeyDown={e => e.which === 13 && onSubmit()}\n        />\n        <Button variant=\"outline-primary\" onClick={onSubmit}>\n          Search\n        </Button>\n        <Dropdown>\n          <Dropdown.Toggle variant=\"outline-primary\">Search by</Dropdown.Toggle>\n          <Dropdown.Menu>\n            {Object.values(SEARCH_ON).map(({ key, title }) => (\n              <Form.Check\n                custom\n                key={key}\n                // must have id in order to sync checked with onChange\n                id={`custom-${title}`}\n                type=\"checkbox\"\n                label={title}\n                checked={modelToSearch[key]}\n                onChange={() => {\n                  setModelToSearch({\n                    ...modelToSearch,\n                    [key]: !modelToSearch[key]\n                  });\n                }}\n              />\n            ))}\n          </Dropdown.Menu>\n        </Dropdown>\n      </Form>\n\n      {fetching && (\n        <div className=\"w-100 d-flex justify-content-center\">\n          <Spinner animation=\"border\" variant=\"info\">\n            <span className=\"sr-only\">Loading...</span>\n          </Spinner>\n        </div>\n      )}\n\n      {/* only show results after a search is executed */}\n      {lastUrl && (\n        <Tabs>\n          {restaurants.length ? (\n            <Tab\n              eventKey={SEARCH_ON.restaurants.key}\n              title={SEARCH_ON.restaurants.title}\n            >\n              <SortableTable\n                settings={RESTAURANTS_PAGE_SCHEMA}\n                data={restaurants}\n              />\n              <Button\n                variant=\"dark\"\n                className=\"w-100 my-5\"\n                onClick={() => {\n                  fetchMore(SEARCH_ON.restaurants.key);\n                }}\n              >\n                Show more\n              </Button>\n            </Tab>\n          ) : null}\n          {events.length ? (\n            <Tab eventKey={SEARCH_ON.events.key} title={SEARCH_ON.events.title}>\n              <SortableTable settings={EVENTS_PAGE_SCHEMA} data={events} />\n              <Button\n                variant=\"dark\"\n                className=\"w-100 my-5\"\n                onClick={() => {\n                  fetchMore(SEARCH_ON.events.key);\n                }}\n              >\n                Show more\n              </Button>\n            </Tab>\n          ) : null}\n          {cities.length ? (\n            <Tab eventKey={SEARCH_ON.cities.key} title={SEARCH_ON.cities.title}>\n              <SortableTable settings={CITY_SCHEMA} data={cities} />\n              <Button\n                variant=\"dark\"\n                className=\"w-100 my-5\"\n                onClick={() => {\n                  fetchMore(SEARCH_ON.cities.key);\n                }}\n              >\n                Show more\n              </Button>\n            </Tab>\n          ) : null}\n        </Tabs>\n      )}\n    </Container>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useLocation\n} from \"react-router-dom\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nimport Home from \"../page/home\";\nimport NotFound from \"../page/not-found\";\nimport About from \"../page/about\";\nimport Cities from \"../page/cities\";\nimport City from \"../page/city\";\nimport Restaurants from \"../page/restaurants\";\nimport Restaurant from \"../page/restaurant\";\nimport Event from \"../page/event\";\nimport Events from \"../page/events\";\nimport Search from \"../page/search\";\n\nconst AppNavBar = () => {\n  const location = useLocation();\n\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <Nav className=\"mr-auto\" defaultActiveKey={location.pathname}>\n        <Nav.Link eventKey=\"/\" as={Link} to=\"/\">\n          Home\n        </Nav.Link>\n        <Nav.Link eventKey=\"/about\" as={Link} to=\"/about\">\n          About\n        </Nav.Link>\n        <Nav.Link eventKey=\"/cities\" as={Link} to=\"/cities\">\n          Cities\n        </Nav.Link>\n        <Nav.Link eventKey=\"/restaurants\" as={Link} to=\"/restaurants\">\n          Restaurants\n        </Nav.Link>\n        <Nav.Link eventKey=\"/events\" as={Link} to=\"/events\">\n          Events\n        </Nav.Link>\n        <Nav.Link eventKey=\"/search\" as={Link} to=\"/search\">\n          Search\n        </Nav.Link>\n      </Nav>\n    </Navbar>\n  );\n};\n\nconst Navigation = () => (\n  <Router>\n    <AppNavBar />\n    <Switch>\n      <Route path=\"/about\">\n        <About />\n      </Route>\n      <Route path=\"/search\">\n        <Search />\n      </Route>\n      <Route path=\"/cities\">\n        <Cities />\n      </Route>\n      <Route path=\"/city/:id\">\n        <City />\n      </Route>\n      <Route path=\"/restaurant/:id\">\n        <Restaurant />\n      </Route>\n      <Route path=\"/restaurants/\">\n        <Restaurants />\n      </Route>\n      <Route path=\"/events/\">\n        <Events />\n      </Route>\n      <Route path=\"/event/:id\">\n        <Event />\n      </Route>\n      <Route path=\"/search\">\n        <Search />\n      </Route>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route>\n        <NotFound />\n      </Route>\n    </Switch>\n  </Router>\n);\n\nexport default Navigation;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Navigation from \"./components/navigation\";\nimport { setLocation } from \"./lib/util\";\n\nexport const CityHuntContext = React.createContext({});\nfunction App() {\n  const [coordinates, setCoordinates] = useState(null);\n\n  useEffect(() => {\n    setLocation(setCoordinates);\n  }, []);\n  return (\n\n    <CityHuntContext.Provider value={{ coordinates }}>\n      <div className=\"App\">\n        <Navigation />\n      </div>\n    </CityHuntContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/marshall_portrait.f95b93b1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/yulissa_portrait.c533ec7e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/quinton_portrait.397de1da.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nathan_portrait.6df7bf3d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/xindi_portrait.d96c6ee7.jpg\";"],"sourceRoot":""}